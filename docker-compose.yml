version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: rulplus-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: rulplus_db
      POSTGRES_USER: rulplus_user
      POSTGRES_PASSWORD: your_secure_password_here
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - rulplus-network

  # Redis для кэширования (опционально)
  redis:
    image: redis:7-alpine
    container_name: rulplus-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - rulplus-network

  # Основное приложение
  app:
    build: .
    container_name: rulplus-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://rulplus_user:your_secure_password_here@postgres:5432/rulplus_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_jwt_secret_here
      PORT: 5000
    volumes:
      - ./server/uploads:/app/server/uploads
      - ./server/logs:/app/server/logs
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    networks:
      - rulplus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx прокси
  nginx:
    image: nginx:alpine
    container_name: rulplus-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl/certs
      - ./server/uploads:/var/www/uploads
    depends_on:
      - app
    networks:
      - rulplus-network

volumes:
  postgres_data:
  redis_data:

networks:
  rulplus-network:
    driver: bridge