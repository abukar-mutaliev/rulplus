{"version":3,"file":"index-bd8956ef.js","sources":["../../src/pages/Education/Staff/index.tsx"],"sourcesContent":["import { Container, Typography, Box, Card, CardContent, Grid, Avatar, Chip, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { School, Person, Star, WorkOutline, Email, Phone } from '@mui/icons-material';\r\n\r\nconst StaffPage = () => {\r\n  // В будущем эти данные будут загружаться из API\r\n  const staffData = {\r\n    totalCount: 12,\r\n    categories: [\r\n      {\r\n        name: 'Преподаватели теоретических дисциплин',\r\n        count: 5,\r\n        staff: [\r\n          {\r\n            id: 1,\r\n            name: 'Иванов Петр Сергеевич',\r\n            position: 'Преподаватель теории',\r\n            education: 'Высшее педагогическое',\r\n            experience: 15,\r\n            qualificationCategory: 'Высшая',\r\n            subjects: ['Правила дорожного движения', 'Основы законодательства', 'Психология вождения'],\r\n            vehicleTypes: [],\r\n            photo: null,\r\n            email: 'ivanov@driving-school.ru',\r\n            phone: '+7 (495) 123-45-70'\r\n          },\r\n          {\r\n            id: 2,\r\n            name: 'Петрова Анна Михайловна',\r\n            position: 'Преподаватель теории',\r\n            education: 'Высшее техническое',\r\n            experience: 12,\r\n            qualificationCategory: 'Первая',\r\n            subjects: ['Устройство автомобиля', 'Техническое обслуживание'],\r\n            vehicleTypes: [],\r\n            photo: null,\r\n            email: 'petrova@driving-school.ru',\r\n            phone: '+7 (495) 123-45-71'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Мастера производственного обучения',\r\n        count: 7,\r\n        staff: [\r\n          {\r\n            id: 3,\r\n            name: 'Сидоров Алексей Владимирович',\r\n            position: 'Мастер производственного обучения (категория B)',\r\n            education: 'Среднее специальное',\r\n            experience: 20,\r\n            qualificationCategory: 'Высшая',\r\n            subjects: ['Практическое вождение категории B'],\r\n            vehicleTypes: ['Легковые автомобили'],\r\n            photo: null,\r\n            email: 'sidorov@driving-school.ru',\r\n            phone: '+7 (495) 123-45-72'\r\n          },\r\n          {\r\n            id: 4,\r\n            name: 'Козлов Дмитрий Александрович',\r\n            position: 'Мастер производственного обучения (категория C)',\r\n            education: 'Среднее специальное',\r\n            experience: 18,\r\n            qualificationCategory: 'Первая',\r\n            subjects: ['Практическое вождение категории C'],\r\n            vehicleTypes: ['Грузовые автомобили'],\r\n            photo: null,\r\n            email: 'kozlov@driving-school.ru',\r\n            phone: '+7 (495) 123-45-73'\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    qualificationRequirements: [\r\n      'Высшее или среднее профессиональное образование',\r\n      'Стаж работы в сфере автомобильного транспорта не менее 3 лет',\r\n      'Действующее водительское удостоверение соответствующей категории',\r\n      'Прохождение курсов повышения квалификации каждые 5 лет',\r\n      'Медицинская справка о пригодности к управлению ТС'\r\n    ]\r\n  };\r\n\r\n  const getQualificationColor = (category: string) => {\r\n    switch (category) {\r\n      case 'Высшая': return 'success';\r\n      case 'Первая': return 'primary';\r\n      case 'Вторая': return 'secondary';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Педагогический состав - Автошкола Драйв</title>\r\n        <meta \r\n          name=\"description\" \r\n          content=\"Педагогический состав автошколы: информация о преподавателях теории и мастерах практического обучения вождению.\" \r\n        />\r\n      </Helmet>\r\n\r\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n        {/* Заголовок страницы */}\r\n        <Box sx={{ mb: 4 }}>\r\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom>\r\n            Руководство. Педагогический (научно-педагогический) состав\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"text.secondary\">\r\n            Информация о педагогических работниках организации\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Общая статистика */}\r\n        <Card sx={{ mb: 4 }}>\r\n          <CardContent>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n              <School sx={{ mr: 2, color: 'primary.main' }} />\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                Общие сведения о педагогическом составе\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={4}>\r\n                <Box sx={{ textAlign: 'center', p: 3, bgcolor: 'primary.light', borderRadius: 2 }}>\r\n                  <Typography variant=\"h3\" color=\"primary.contrastText\" gutterBottom>\r\n                    {staffData.totalCount}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"primary.contrastText\">\r\n                    Общее количество педагогических работников\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={4}>\r\n                <Box sx={{ textAlign: 'center', p: 3, bgcolor: 'secondary.light', borderRadius: 2 }}>\r\n                  <Typography variant=\"h3\" color=\"secondary.contrastText\" gutterBottom>\r\n                    {staffData.categories[0].count}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"secondary.contrastText\">\r\n                    Преподаватели теоретических дисциплин\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={4}>\r\n                <Box sx={{ textAlign: 'center', p: 3, bgcolor: 'success.light', borderRadius: 2 }}>\r\n                  <Typography variant=\"h3\" color=\"success.contrastText\" gutterBottom>\r\n                    {staffData.categories[1].count}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"success.contrastText\">\r\n                    Мастера производственного обучения\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Педагогический состав по категориям */}\r\n        {staffData.categories.map((category, categoryIndex) => (\r\n          <Card key={categoryIndex} sx={{ mb: 4 }}>\r\n            <CardContent>\r\n              <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                {category.name}\r\n              </Typography>\r\n              \r\n              <Grid container spacing={3}>\r\n                {category.staff.map((person) => (\r\n                  <Grid item xs={12} md={6} key={person.id}>\r\n                    <Card variant=\"outlined\" sx={{ height: '100%' }}>\r\n                      <CardContent>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                          <Avatar sx={{ mr: 2, bgcolor: 'primary.main', width: 60, height: 60 }}>\r\n                            {person.name.split(' ').map(n => n[0]).join('')}\r\n                          </Avatar>\r\n                          <Box sx={{ flex: 1 }}>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                              {person.name}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                              {person.position}\r\n                            </Typography>\r\n                            <Chip \r\n                              label={`${person.qualificationCategory} категория`}\r\n                              color={getQualificationColor(person.qualificationCategory) as any}\r\n                              size=\"small\"\r\n                            />\r\n                          </Box>\r\n                        </Box>\r\n\r\n                        <Box sx={{ mb: 2 }}>\r\n                          <Typography variant=\"body2\" gutterBottom>\r\n                            <strong>Образование:</strong> {person.education}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" gutterBottom>\r\n                            <strong>Стаж работы:</strong> {person.experience} лет\r\n                          </Typography>\r\n                          \r\n                          <Typography variant=\"body2\" gutterBottom>\r\n                            <strong>Преподаваемые дисциплины:</strong>\r\n                          </Typography>\r\n                          <Box sx={{ pl: 2 }}>\r\n                            {person.subjects.map((subject, index) => (\r\n                              <Typography key={index} variant=\"body2\" sx={{ fontSize: '0.8rem' }}>\r\n                                • {subject}\r\n                              </Typography>\r\n                            ))}\r\n                          </Box>\r\n                          \r\n                          {person.vehicleTypes && person.vehicleTypes.length > 0 && (\r\n                            <>\r\n                              <Typography variant=\"body2\" gutterBottom sx={{ mt: 1 }}>\r\n                                <strong>Типы ТС:</strong> {person.vehicleTypes.join(', ')}\r\n                              </Typography>\r\n                            </>\r\n                          )}\r\n                        </Box>\r\n\r\n                        <Box sx={{ display: 'flex', gap: 1, mt: 2 }}>\r\n                          <Box sx={{ display: 'flex', alignItems: 'center', fontSize: '0.8rem' }}>\r\n                            <Email sx={{ mr: 0.5, fontSize: 16 }} />\r\n                            <Typography variant=\"caption\">{person.email}</Typography>\r\n                          </Box>\r\n                          <Box sx={{ display: 'flex', alignItems: 'center', fontSize: '0.8rem' }}>\r\n                            <Phone sx={{ mr: 0.5, fontSize: 16 }} />\r\n                            <Typography variant=\"caption\">{person.phone}</Typography>\r\n                          </Box>\r\n                        </Box>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n\r\n        {/* Сводная таблица */}\r\n        <Card sx={{ mb: 4 }}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n              Сводная информация о педагогических работниках\r\n            </Typography>\r\n            \r\n            <TableContainer component={Paper} variant=\"outlined\">\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell><strong>ФИО</strong></TableCell>\r\n                    <TableCell><strong>Должность</strong></TableCell>\r\n                    <TableCell><strong>Образование</strong></TableCell>\r\n                    <TableCell><strong>Стаж</strong></TableCell>\r\n                    <TableCell><strong>Категория</strong></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {staffData.categories.flatMap(category => \r\n                    category.staff.map((person) => (\r\n                      <TableRow key={person.id}>\r\n                        <TableCell>{person.name}</TableCell>\r\n                        <TableCell>{person.position}</TableCell>\r\n                        <TableCell>{person.education}</TableCell>\r\n                        <TableCell>{person.experience} лет</TableCell>\r\n                        <TableCell>\r\n                          <Chip \r\n                            label={person.qualificationCategory}\r\n                            color={getQualificationColor(person.qualificationCategory) as any}\r\n                            size=\"small\"\r\n                          />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Требования к квалификации */}\r\n        <Card>\r\n          <CardContent>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n              <Star sx={{ mr: 2, color: 'primary.main' }} />\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                Требования к квалификации педагогических работников\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Typography variant=\"body1\" gutterBottom sx={{ mb: 2 }}>\r\n              Все педагогические работники соответствуют установленным квалификационным требованиям:\r\n            </Typography>\r\n\r\n            {staffData.qualificationRequirements.map((requirement, index) => (\r\n              <Typography key={index} variant=\"body2\" sx={{ mb: 1 }}>\r\n                • {requirement}\r\n              </Typography>\r\n            ))}\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Дата обновления */}\r\n        <Box sx={{ mt: 4, textAlign: 'center' }}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            Дата последнего обновления информации: {new Date().toLocaleDateString('ru-RU')}\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffPage; "],"names":["StaffPage","staffData","getQualificationColor","category","jsxs","Fragment","Helmet","jsx","Container","Box","Typography","Card","CardContent","School","Grid","categoryIndex","person","Avatar","n","Chip","subject","index","Email","Phone","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","Star","requirement"],"mappings":"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"}