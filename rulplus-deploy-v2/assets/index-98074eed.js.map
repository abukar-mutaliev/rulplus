{"version":3,"file":"index-98074eed.js","sources":["../../src/pages/AdminPanel/StudentsManagement/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Chip,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Alert,\r\n  Fab,\r\n  Avatar,\r\n  LinearProgress,\r\n  Tabs,\r\n  Tab\r\n} from '@mui/material';\r\nimport {\r\n  School,\r\n  Add,\r\n  Edit,\r\n  Delete,\r\n  ArrowBack,\r\n  Save,\r\n  Cancel,\r\n  Phone,\r\n  Email,\r\n  Assignment\r\n} from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\ninterface Student {\r\n  id: string;\r\n  name: string;\r\n  phone: string;\r\n  email: string;\r\n  course: string;\r\n  enrollDate: string;\r\n  status: 'active' | 'completed' | 'suspended' | 'dropped';\r\n  progress: number;\r\n  instructor: string;\r\n  theoryHours: number;\r\n  practiceHours: number;\r\n  totalTheoryHours: number;\r\n  totalPracticeHours: number;\r\n}\r\n\r\nconst StudentsManagement = () => {\r\n  const navigate = useNavigate();\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [students, setStudents] = useState<Student[]>([]);\r\n  const [selectedStudent, setSelectedStudent] = useState<Student | null>(null);\r\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\r\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    course: '',\r\n    status: 'active' as 'active' | 'completed' | 'suspended' | 'dropped',\r\n    instructor: '',\r\n    theoryHours: 0,\r\n    practiceHours: 0\r\n  });\r\n\r\n  // Моковые данные\r\n  useEffect(() => {\r\n    const mockStudents: Student[] = [\r\n      {\r\n        id: '1',\r\n        name: 'Абдулаев Магомед Русланович',\r\n        phone: '+7928-111-22-33',\r\n        email: 'abdul@example.com',\r\n        course: 'Категория B',\r\n        enrollDate: '2024-01-15',\r\n        status: 'active',\r\n        progress: 75,\r\n        instructor: 'Иванов И.И.',\r\n        theoryHours: 30,\r\n        practiceHours: 15,\r\n        totalTheoryHours: 40,\r\n        totalPracticeHours: 20\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'Исаева Хава Ахмедовна',\r\n        phone: '+7928-444-55-66',\r\n        email: 'isaeva@example.com',\r\n        course: 'Категория B',\r\n        enrollDate: '2024-02-01',\r\n        status: 'active',\r\n        progress: 45,\r\n        instructor: 'Петрова А.С.',\r\n        theoryHours: 18,\r\n        practiceHours: 8,\r\n        totalTheoryHours: 40,\r\n        totalPracticeHours: 20\r\n      },\r\n      {\r\n        id: '3',\r\n        name: 'Газиев Руслан Мурадович',\r\n        phone: '+7928-777-88-99',\r\n        email: 'gaziev@example.com',\r\n        course: 'Категория B',\r\n        enrollDate: '2023-11-20',\r\n        status: 'completed',\r\n        progress: 100,\r\n        instructor: 'Сидоров П.А.',\r\n        theoryHours: 40,\r\n        practiceHours: 20,\r\n        totalTheoryHours: 40,\r\n        totalPracticeHours: 20\r\n      },\r\n      {\r\n        id: '4',\r\n        name: 'Мурадова Зарема Салманovna',\r\n        phone: '+7928-123-45-67',\r\n        email: 'muradova@example.com',\r\n        course: 'Категория B',\r\n        enrollDate: '2024-01-30',\r\n        status: 'suspended',\r\n        progress: 25,\r\n        instructor: 'Иванов И.И.',\r\n        theoryHours: 10,\r\n        practiceHours: 2,\r\n        totalTheoryHours: 40,\r\n        totalPracticeHours: 20\r\n      }\r\n    ];\r\n    setStudents(mockStudents);\r\n  }, []);\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const getFilteredStudents = () => {\r\n    switch (tabValue) {\r\n      case 0: return students; // Все\r\n      case 1: return students.filter(s => s.status === 'active');\r\n      case 2: return students.filter(s => s.status === 'completed');\r\n      case 3: return students.filter(s => s.status === 'suspended' || s.status === 'dropped');\r\n      default: return students;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'primary';\r\n      case 'completed': return 'success';\r\n      case 'suspended': return 'warning';\r\n      case 'dropped': return 'error';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'Обучается';\r\n      case 'completed': return 'Завершил';\r\n      case 'suspended': return 'Приостановлен';\r\n      case 'dropped': return 'Отчислен';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  const handleEdit = (student: Student) => {\r\n    setSelectedStudent(student);\r\n    setFormData({\r\n      name: student.name,\r\n      phone: student.phone,\r\n      email: student.email,\r\n      course: student.course,\r\n      status: student.status,\r\n      instructor: student.instructor,\r\n      theoryHours: student.theoryHours,\r\n      practiceHours: student.practiceHours\r\n    });\r\n    setIsEditDialogOpen(true);\r\n  };\r\n\r\n  const handleDelete = (student: Student) => {\r\n    setSelectedStudent(student);\r\n    setIsDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedStudent) {\r\n      // Обновление существующего студента\r\n      const updatedStudents = students.map(s => \r\n        s.id === selectedStudent.id \r\n          ? { \r\n              ...s, \r\n              ...formData,\r\n              progress: Math.round(((formData.theoryHours / 40) + (formData.practiceHours / 20)) * 50)\r\n            }\r\n          : s\r\n      );\r\n      setStudents(updatedStudents);\r\n    } else {\r\n      // Создание нового студента\r\n      const newStudent: Student = {\r\n        id: Date.now().toString(),\r\n        ...formData,\r\n        enrollDate: new Date().toISOString().split('T')[0],\r\n        totalTheoryHours: 40,\r\n        totalPracticeHours: 20,\r\n        progress: Math.round(((formData.theoryHours / 40) + (formData.practiceHours / 20)) * 50)\r\n      };\r\n      setStudents([...students, newStudent]);\r\n    }\r\n    setIsEditDialogOpen(false);\r\n    setSelectedStudent(null);\r\n  };\r\n\r\n  const handleDeleteConfirm = () => {\r\n    if (selectedStudent) {\r\n      setStudents(students.filter(s => s.id !== selectedStudent.id));\r\n    }\r\n    setIsDeleteDialogOpen(false);\r\n    setSelectedStudent(null);\r\n  };\r\n\r\n  const stats = {\r\n    total: students.length,\r\n    active: students.filter(s => s.status === 'active').length,\r\n    completed: students.filter(s => s.status === 'completed').length,\r\n    avgProgress: Math.round(students.reduce((sum, s) => sum + s.progress, 0) / students.length)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Управление студентами - РУЛЬ+ Админ</title>\r\n        <meta name=\"robots\" content=\"noindex,nofollow\" />\r\n      </Helmet>\r\n\r\n      <Container maxWidth=\"xl\" sx={{ py: 4 }}>\r\n        {/* Заголовок */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 4 }}>\r\n          <Button\r\n            startIcon={<ArrowBack />}\r\n            onClick={() => navigate('/admin')}\r\n            sx={{ mr: 2 }}\r\n          >\r\n            Назад\r\n          </Button>\r\n          <School sx={{ mr: 2, fontSize: 32, color: 'primary.main' }} />\r\n          <Box>\r\n            <Typography variant=\"h4\" component=\"h1\" fontWeight=\"bold\">\r\n              Управление студентами\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\">\r\n              Управление учащимися автошколы и их прогрессом\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Статистика */}\r\n        <Grid container spacing={3} sx={{ mb: 4 }}>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Всего студентов\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"primary\">\r\n                  {stats.total}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Обучаются\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"primary.main\">\r\n                  {stats.active}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Завершили\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"success.main\">\r\n                  {stats.completed}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Средний прогресс\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"info.main\">\r\n                  {stats.avgProgress}%\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Вкладки фильтрации */}\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\r\n          <Tabs value={tabValue} onChange={handleTabChange}>\r\n            <Tab label=\"Все\" />\r\n            <Tab label=\"Обучаются\" />\r\n            <Tab label=\"Завершили\" />\r\n            <Tab label=\"Проблемные\" />\r\n          </Tabs>\r\n        </Box>\r\n\r\n        {/* Таблица студентов */}\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Студент</TableCell>\r\n                  <TableCell>Курс</TableCell>\r\n                  <TableCell>Инструктор</TableCell>\r\n                  <TableCell>Прогресс</TableCell>\r\n                  <TableCell>Часы обучения</TableCell>\r\n                  <TableCell>Дата записи</TableCell>\r\n                  <TableCell>Статус</TableCell>\r\n                  <TableCell align=\"center\">Действия</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {getFilteredStudents().map((student) => (\r\n                  <TableRow key={student.id} hover>\r\n                    <TableCell>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar sx={{ mr: 2, bgcolor: 'primary.main' }}>\r\n                          {student.name.split(' ').map(n => n[0]).join('')}\r\n                        </Avatar>\r\n                        <Box>\r\n                          <Typography variant=\"subtitle2\" fontWeight=\"medium\">\r\n                            {student.name}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {student.phone}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>{student.course}</TableCell>\r\n                    <TableCell>{student.instructor}</TableCell>\r\n                    <TableCell>\r\n                      <Box sx={{ width: '100%' }}>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {student.progress}%\r\n                          </Typography>\r\n                        </Box>\r\n                        <LinearProgress \r\n                          variant=\"determinate\" \r\n                          value={student.progress}\r\n                          sx={{ height: 8, borderRadius: 4 }}\r\n                        />\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Typography variant=\"body2\">\r\n                        Теория: {student.theoryHours}/{student.totalTheoryHours}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">\r\n                        Практика: {student.practiceHours}/{student.totalPracticeHours}\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell>{student.enrollDate}</TableCell>\r\n                    <TableCell>\r\n                      <Chip \r\n                        label={getStatusText(student.status)} \r\n                        size=\"small\" \r\n                        color={getStatusColor(student.status) as any}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        onClick={() => handleEdit(student)}\r\n                        title=\"Редактировать\"\r\n                      >\r\n                        <Edit />\r\n                      </IconButton>\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        onClick={() => handleDelete(student)}\r\n                        title=\"Удалить\"\r\n                        color=\"error\"\r\n                      >\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n\r\n        {/* Кнопка добавления */}\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          sx={{ position: 'fixed', bottom: 24, right: 24 }}\r\n          onClick={() => {\r\n            setSelectedStudent(null);\r\n            setFormData({\r\n              name: '',\r\n              phone: '',\r\n              email: '',\r\n              course: 'Категория B',\r\n              status: 'active',\r\n              instructor: '',\r\n              theoryHours: 0,\r\n              practiceHours: 0\r\n            });\r\n            setIsEditDialogOpen(true);\r\n          }}\r\n        >\r\n          <Add />\r\n        </Fab>\r\n\r\n        {/* Диалог редактирования */}\r\n        <Dialog open={isEditDialogOpen} onClose={() => setIsEditDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>\r\n            {selectedStudent ? 'Редактировать студента' : 'Добавить нового студента'}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <Box sx={{ pt: 2 }}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"ФИО\"\r\n                    value={formData.name}\r\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Телефон\"\r\n                    value={formData.phone}\r\n                    onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    value={formData.email}\r\n                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>Курс</InputLabel>\r\n                    <Select\r\n                      value={formData.course}\r\n                      label=\"Курс\"\r\n                      onChange={(e) => setFormData({ ...formData, course: e.target.value })}\r\n                    >\r\n                      <MenuItem value=\"Категория A\">Категория A</MenuItem>\r\n                      <MenuItem value=\"Категория B\">Категория B</MenuItem>\r\n                      <MenuItem value=\"Категория C\">Категория C</MenuItem>\r\n                      <MenuItem value=\"Категория D\">Категория D</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>Статус</InputLabel>\r\n                    <Select\r\n                      value={formData.status}\r\n                      label=\"Статус\"\r\n                      onChange={(e) => setFormData({ ...formData, status: e.target.value as any })}\r\n                    >\r\n                      <MenuItem value=\"active\">Обучается</MenuItem>\r\n                      <MenuItem value=\"completed\">Завершил</MenuItem>\r\n                      <MenuItem value=\"suspended\">Приостановлен</MenuItem>\r\n                      <MenuItem value=\"dropped\">Отчислен</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Инструктор\"\r\n                    value={formData.instructor}\r\n                    onChange={(e) => setFormData({ ...formData, instructor: e.target.value })}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Часы теории\"\r\n                    type=\"number\"\r\n                    value={formData.theoryHours}\r\n                    onChange={(e) => setFormData({ ...formData, theoryHours: parseInt(e.target.value) || 0 })}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Часы практики\"\r\n                    type=\"number\"\r\n                    value={formData.practiceHours}\r\n                    onChange={(e) => setFormData({ ...formData, practiceHours: parseInt(e.target.value) || 0 })}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setIsEditDialogOpen(false)} startIcon={<Cancel />}>\r\n              Отмена\r\n            </Button>\r\n            <Button onClick={handleSave} variant=\"contained\" startIcon={<Save />}>\r\n              Сохранить\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Диалог удаления */}\r\n        <Dialog open={isDeleteDialogOpen} onClose={() => setIsDeleteDialogOpen(false)}>\r\n          <DialogTitle>Подтверждение удаления</DialogTitle>\r\n          <DialogContent>\r\n            <Alert severity=\"warning\" sx={{ mb: 2 }}>\r\n              Это действие нельзя отменить!\r\n            </Alert>\r\n            <Typography>\r\n              Вы уверены, что хотите удалить студента \"{selectedStudent?.name}\"?\r\n            </Typography>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setIsDeleteDialogOpen(false)}>\r\n              Отмена\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\" variant=\"contained\">\r\n              Удалить\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentsManagement; "],"names":["StudentsManagement","navigate","useNavigate","tabValue","setTabValue","useState","students","setStudents","selectedStudent","setSelectedStudent","isEditDialogOpen","setIsEditDialogOpen","isDeleteDialogOpen","setIsDeleteDialogOpen","formData","setFormData","useEffect","handleTabChange","event","newValue","getFilteredStudents","s","getStatusColor","status","getStatusText","handleEdit","student","handleDelete","handleSave","updatedStudents","newStudent","handleDeleteConfirm","stats","sum","jsxs","Fragment","Helmet","jsx","Container","Box","Button","ArrowBack","School","Typography","Grid","Card","CardContent","Tabs","Tab","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Avatar","n","LinearProgress","Chip","IconButton","Edit","Delete","Fab","Add","Dialog","DialogTitle","DialogContent","TextField","e","FormControl","InputLabel","Select","MenuItem","DialogActions","Cancel","Save","Alert"],"mappings":"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"}