{"version":3,"file":"index-7809754f.js","sources":["../../src/pages/AdminPanel/DocumentsManagement/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Chip,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Alert,\r\n  Fab,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Stack,\r\n  CircularProgress,\r\n  Snackbar\r\n} from '@mui/material';\r\nimport {\r\n  Description,\r\n  Add,\r\n  Edit,\r\n  Delete,\r\n  ArrowBack,\r\n  Save,\r\n  Cancel,\r\n  CloudUpload,\r\n  Visibility,\r\n  GetApp,\r\n  ExpandMore,\r\n  CheckCircle,\r\n  Warning,\r\n  Info\r\n} from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { documentsApi, DocumentsData, Document } from '../../../shared/api/documentsApi';\r\n\r\nconst DocumentsManagement = () => {\r\n  const navigate = useNavigate();\r\n  const [documentsData, setDocumentsData] = useState<DocumentsData | null>(null);\r\n  const [selectedDocument, setSelectedDocument] = useState<Document | null>(null);\r\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\r\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: 'success' as 'success' | 'error' | 'warning' | 'info'\r\n  });\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    category: 'charter',\r\n    expiryDate: '',\r\n    status: 'active' as 'active' | 'expired' | 'not_required'\r\n  });\r\n\r\n  // Категории документов\r\n  const documentCategories = [\r\n    { key: 'charter', label: 'Устав', icon: <Description />, color: 'primary' },\r\n    { key: 'license', label: 'Лицензия', icon: <CheckCircle />, color: 'success' },\r\n    { key: 'accreditation', label: 'Аккредитация', icon: <Warning />, color: 'warning' },\r\n    { key: 'regulations', label: 'Правила распорядка', icon: <Description />, color: 'info' },\r\n    { key: 'reports', label: 'Отчеты самообследования', icon: <Description />, color: 'secondary' },\r\n    { key: 'collective', label: 'Коллективный договор', icon: <Description />, color: 'primary' },\r\n    { key: 'prescriptions', label: 'Предписания', icon: <Warning />, color: 'error' }\r\n  ];\r\n\r\n  // Загрузка документов с сервера\r\n  useEffect(() => {\r\n    loadDocuments();\r\n  }, []);\r\n\r\n  const loadDocuments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await documentsApi.getDocuments();\r\n      setDocumentsData(response.data);\r\n    } catch (error) {\r\n      console.error('Ошибка загрузки документов:', error);\r\n      showSnackbar('Ошибка загрузки документов', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const showSnackbar = (message: string, severity: 'success' | 'error' | 'warning' | 'info') => {\r\n    setSnackbar({ open: true, message, severity });\r\n  };\r\n\r\n  // Получение всех документов в плоском массиве\r\n  const getAllDocuments = (): Document[] => {\r\n    if (!documentsData) return [];\r\n    \r\n    const allDocs: Document[] = [];\r\n    Object.values(documentsData).forEach(categoryDocs => {\r\n      if (Array.isArray(categoryDocs)) {\r\n        allDocs.push(...categoryDocs);\r\n      }\r\n    });\r\n    return allDocs;\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'success';\r\n      case 'expired': return 'error';\r\n      case 'not_required': return 'info';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'Активный';\r\n      case 'expired': return 'Просрочен';\r\n      case 'not_required': return 'Не требуется';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  const handleEdit = (document: Document) => {\r\n    setSelectedDocument(document);\r\n    setFormData({\r\n      title: document.title,\r\n      description: document.description,\r\n      category: document.category || 'charter',\r\n      expiryDate: document.expiryDate || '',\r\n      status: document.status || 'active'\r\n    });\r\n    setSelectedFile(null);\r\n    setIsEditDialogOpen(true);\r\n  };\r\n\r\n  const handleDelete = (document: Document) => {\r\n    setSelectedDocument(document);\r\n    setIsDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      setSaving(true);\r\n      \r\n      if (selectedDocument) {\r\n        // Обновление существующего документа\r\n        await documentsApi.updateDocument(selectedDocument.id, {\r\n          ...formData,\r\n          file: selectedFile || undefined\r\n        });\r\n        showSnackbar('Документ успешно обновлен', 'success');\r\n      } else {\r\n        // Создание нового документа\r\n        await documentsApi.createDocument({\r\n          ...formData,\r\n          file: selectedFile || undefined\r\n        });\r\n        showSnackbar('Документ успешно создан', 'success');\r\n      }\r\n      \r\n      // Перезагружаем документы\r\n      await loadDocuments();\r\n      \r\n      setIsEditDialogOpen(false);\r\n      setSelectedDocument(null);\r\n      setSelectedFile(null);\r\n      \r\n    } catch (error: any) {\r\n      console.error('Ошибка сохранения документа:', error);\r\n      showSnackbar(error.message || 'Ошибка сохранения документа', 'error');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!selectedDocument) return;\r\n    \r\n    try {\r\n      setSaving(true);\r\n      await documentsApi.deleteDocument(selectedDocument.id);\r\n      showSnackbar('Документ успешно удален', 'success');\r\n      \r\n      // Перезагружаем документы\r\n      await loadDocuments();\r\n      \r\n      setIsDeleteDialogOpen(false);\r\n      setSelectedDocument(null);\r\n    } catch (error: any) {\r\n      console.error('Ошибка удаления документа:', error);\r\n      showSnackbar(error.message || 'Ошибка удаления документа', 'error');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      setSelectedFile(file);\r\n    }\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    setSelectedDocument(null);\r\n    setFormData({\r\n      title: '',\r\n      description: '',\r\n      category: 'charter',\r\n      expiryDate: '',\r\n      status: 'active'\r\n    });\r\n    setSelectedFile(null);\r\n    setIsEditDialogOpen(true);\r\n  };\r\n\r\n  // Показать загрузку\r\n  if (loading) {\r\n    return (\r\n      <Container maxWidth=\"xl\" sx={{ py: 8, textAlign: 'center' }}>\r\n        <CircularProgress size={40} />\r\n        <Typography variant=\"h6\" sx={{ mt: 2 }}>\r\n          Загрузка документов...\r\n        </Typography>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (!documentsData) {\r\n    return (\r\n      <Container maxWidth=\"xl\" sx={{ py: 8 }}>\r\n        <Alert severity=\"error\">\r\n          Не удалось загрузить документы\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  const allDocuments = getAllDocuments();\r\n  const stats = {\r\n    total: allDocuments.length,\r\n    active: allDocuments.filter(d => d.status === 'active').length,\r\n    expired: allDocuments.filter(d => d.status === 'expired').length,\r\n    notRequired: allDocuments.filter(d => d.status === 'not_required').length\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Управление документами - РУЛЬ+ Админ</title>\r\n        <meta name=\"robots\" content=\"noindex,nofollow\" />\r\n      </Helmet>\r\n\r\n      <Container maxWidth=\"xl\" sx={{ py: 4 }}>\r\n        {/* Заголовок */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 4 }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <Button\r\n              startIcon={<ArrowBack />}\r\n              onClick={() => navigate('/admin')}\r\n              sx={{ mr: 2 }}\r\n            >\r\n              Назад\r\n            </Button>\r\n            <Description sx={{ mr: 2, fontSize: 32, color: 'primary.main' }} />\r\n            <Box>\r\n              <Typography variant=\"h4\" component=\"h1\" fontWeight=\"bold\">\r\n                Управление документами\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                Управление документами образовательной организации\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<Add />}\r\n            onClick={handleAddNew}\r\n            size=\"large\"\r\n          >\r\n            Добавить документ\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Статистика */}\r\n        <Grid container spacing={3} sx={{ mb: 4 }}>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Всего документов\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"primary\">\r\n                  {stats.total}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Активных\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"success.main\">\r\n                  {stats.active}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Просроченных\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"error.main\">\r\n                  {stats.expired}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Не требуется\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"info.main\">\r\n                  {stats.notRequired}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Список документов по категориям */}\r\n        {documentCategories.map((category) => {\r\n          const categoryDocs = Array.isArray(documentsData[category.key]) \r\n            ? (documentsData[category.key] as Document[]) \r\n            : [];\r\n          \r\n          return (\r\n            <Accordion key={category.key} defaultExpanded sx={{ mb: 2 }}>\r\n              <AccordionSummary expandIcon={<ExpandMore />}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n                  {category.icon}\r\n                  <Typography variant=\"h6\" sx={{ ml: 2, flexGrow: 1 }}>\r\n                    {category.label}\r\n                  </Typography>\r\n                  <Chip \r\n                    label={categoryDocs.length} \r\n                    size=\"small\" \r\n                    color={category.color as any}\r\n                    sx={{ mr: 2 }}\r\n                  />\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    startIcon={<Add />}\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      setFormData({\r\n                        title: '',\r\n                        description: '',\r\n                        category: category.key,\r\n                        expiryDate: '',\r\n                        status: 'active'\r\n                      });\r\n                      setSelectedDocument(null);\r\n                      setSelectedFile(null);\r\n                      setIsEditDialogOpen(true);\r\n                    }}\r\n                    sx={{ ml: 1 }}\r\n                  >\r\n                    Добавить\r\n                  </Button>\r\n                </Box>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                {categoryDocs.length > 0 ? (\r\n                  <TableContainer component={Paper} variant=\"outlined\">\r\n                      <Table>\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell>Документ</TableCell>\r\n                            <TableCell>Файл</TableCell>\r\n                            <TableCell>Дата загрузки</TableCell>\r\n                            <TableCell>Срок действия</TableCell>\r\n                            <TableCell>Статус</TableCell>\r\n                            <TableCell align=\"center\">Действия</TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                      <TableBody>\r\n                        {categoryDocs.map((doc: Document) => (\r\n                          <TableRow key={doc.id} hover>\r\n                            <TableCell>\r\n                              <Box>\r\n                                <Typography variant=\"subtitle2\" fontWeight=\"medium\">\r\n                                  {doc.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                  {doc.description}\r\n                                </Typography>\r\n                              </Box>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {doc.fileName ? (\r\n                                <Box>\r\n                                  <Typography variant=\"body2\">{doc.fileName}</Typography>\r\n                                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                                    {doc.fileSize}\r\n                                  </Typography>\r\n                                </Box>\r\n                              ) : (\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                  Файл не загружен\r\n                                </Typography>\r\n                              )}\r\n                            </TableCell>\r\n                            <TableCell>{doc.uploadDate}</TableCell>\r\n                            <TableCell>\r\n                              {doc.expiryDate ? (\r\n                                <Typography \r\n                                  variant=\"body2\" \r\n                                  color={new Date(doc.expiryDate) < new Date() ? 'error' : 'inherit'}\r\n                                >\r\n                                  {doc.expiryDate}\r\n                                </Typography>\r\n                              ) : (\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                  Бессрочно\r\n                                </Typography>\r\n                              )}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <Chip \r\n                                label={getStatusText(doc.status || 'active')} \r\n                                size=\"small\" \r\n                                color={getStatusColor(doc.status || 'active') as any}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                              <Stack direction=\"row\" spacing={1}>\r\n                                {doc.fileUrl && (\r\n                                  <>\r\n                                    <IconButton \r\n                                      size=\"small\" \r\n                                      onClick={() => documentsApi.viewDocument(doc.fileUrl!)}\r\n                                      title=\"Просмотр\"\r\n                                    >\r\n                                      <Visibility />\r\n                                    </IconButton>\r\n                                    <IconButton \r\n                                      size=\"small\"\r\n                                      onClick={() => documentsApi.downloadDocument(doc.fileUrl!, doc.fileName || doc.title)}\r\n                                      title=\"Скачать\"\r\n                                    >\r\n                                      <GetApp />\r\n                                    </IconButton>\r\n                                  </>\r\n                                )}\r\n                                <IconButton \r\n                                  size=\"small\" \r\n                                  onClick={() => handleEdit(doc)}\r\n                                  title=\"Редактировать\"\r\n                                >\r\n                                  <Edit />\r\n                                </IconButton>\r\n                                <IconButton \r\n                                  size=\"small\" \r\n                                  onClick={() => handleDelete(doc)}\r\n                                  title=\"Удалить\"\r\n                                  color=\"error\"\r\n                                >\r\n                                  <Delete />\r\n                                </IconButton>\r\n                              </Stack>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                                              </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                ) : (\r\n                  <Box sx={{ textAlign: 'center', py: 3 }}>\r\n                    <Alert severity=\"info\">\r\n                      В данной категории документы отсутствуют\r\n                    </Alert>\r\n                  </Box>\r\n                )}\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          );\r\n        })}\r\n\r\n        {/* Кнопка добавления */}\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          sx={{ position: 'fixed', bottom: 24, right: 24 }}\r\n          onClick={handleAddNew}\r\n        >\r\n          <Add />\r\n        </Fab>\r\n\r\n        {/* Диалог редактирования */}\r\n        <Dialog open={isEditDialogOpen} onClose={() => !saving && setIsEditDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>\r\n            {selectedDocument ? 'Редактировать документ' : 'Добавить новый документ'}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <Box sx={{ pt: 2 }}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Название документа\"\r\n                    value={formData.title}\r\n                    onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n                    disabled={saving}\r\n                  />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Описание\"\r\n                    multiline\r\n                    rows={3}\r\n                    value={formData.description}\r\n                    onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n                    disabled={saving}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormControl fullWidth disabled={saving}>\r\n                    <InputLabel>Категория</InputLabel>\r\n                    <Select\r\n                      value={formData.category}\r\n                      label=\"Категория\"\r\n                      onChange={(e) => setFormData({ ...formData, category: e.target.value })}\r\n                    >\r\n                      {documentCategories.map((category) => (\r\n                        <MenuItem key={category.key} value={category.key}>\r\n                          {category.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormControl fullWidth disabled={saving}>\r\n                    <InputLabel>Статус</InputLabel>\r\n                    <Select\r\n                      value={formData.status}\r\n                      label=\"Статус\"\r\n                      onChange={(e) => setFormData({ ...formData, status: e.target.value as any })}\r\n                    >\r\n                      <MenuItem value=\"active\">Активный</MenuItem>\r\n                      <MenuItem value=\"expired\">Просрочен</MenuItem>\r\n                      <MenuItem value=\"not_required\">Не требуется</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Box sx={{ border: '2px dashed #ccc', borderRadius: 2, p: 3, textAlign: 'center' }}>\r\n                    <CloudUpload sx={{ fontSize: 48, color: 'text.secondary', mb: 2 }} />\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Загрузить файл документа\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                      Разрешены файлы: PDF, DOC, DOCX, TXT (максимум 10 МБ)\r\n                    </Typography>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"label\"\r\n                      startIcon={<CloudUpload />}\r\n                      disabled={saving}\r\n                    >\r\n                      Выбрать файл\r\n                      <input\r\n                        type=\"file\"\r\n                        hidden\r\n                        accept=\".pdf,.doc,.docx,.txt\"\r\n                        onChange={handleFileUpload}\r\n                      />\r\n                    </Button>\r\n                    {selectedFile && (\r\n                      <Alert severity=\"success\" sx={{ mt: 2 }}>\r\n                        Файл выбран: {selectedFile.name} ({(selectedFile.size / 1024 / 1024).toFixed(1)} МБ)\r\n                      </Alert>\r\n                    )}\r\n                  </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Срок действия\"\r\n                    type=\"date\"\r\n                    value={formData.expiryDate}\r\n                    onChange={(e) => setFormData({ ...formData, expiryDate: e.target.value })}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    helperText=\"Оставьте пустым для бессрочного документа\"\r\n                    disabled={saving}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setIsEditDialogOpen(false)} startIcon={<Cancel />} disabled={saving}>\r\n              Отмена\r\n            </Button>\r\n            <Button \r\n              onClick={handleSave} \r\n              variant=\"contained\" \r\n              startIcon={saving ? <CircularProgress size={16} /> : <Save />}\r\n              disabled={saving || !formData.title.trim() || !formData.description.trim()}\r\n            >\r\n              {saving ? 'Сохранение...' : 'Сохранить'}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Диалог удаления */}\r\n        <Dialog open={isDeleteDialogOpen} onClose={() => !saving && setIsDeleteDialogOpen(false)}>\r\n          <DialogTitle>Подтверждение удаления</DialogTitle>\r\n          <DialogContent>\r\n            <Alert severity=\"warning\" sx={{ mb: 2 }}>\r\n              Это действие нельзя отменить!\r\n            </Alert>\r\n            <Typography>\r\n              Вы уверены, что хотите удалить документ \"{selectedDocument?.title}\"?\r\n            </Typography>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setIsDeleteDialogOpen(false)} disabled={saving}>\r\n              Отмена\r\n            </Button>\r\n            <Button \r\n              onClick={handleDeleteConfirm} \r\n              color=\"error\" \r\n              variant=\"contained\"\r\n              disabled={saving}\r\n              startIcon={saving ? <CircularProgress size={16} /> : <Delete />}\r\n            >\r\n              {saving ? 'Удаление...' : 'Удалить'}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Уведомления */}\r\n        <Snackbar\r\n          open={snackbar.open}\r\n          autoHideDuration={6000}\r\n          onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n        >\r\n          <Alert \r\n            onClose={() => setSnackbar({ ...snackbar, open: false })} \r\n            severity={snackbar.severity}\r\n            sx={{ width: '100%' }}\r\n          >\r\n            {snackbar.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DocumentsManagement; "],"names":["DocumentsManagement","navigate","useNavigate","documentsData","setDocumentsData","useState","selectedDocument","setSelectedDocument","isEditDialogOpen","setIsEditDialogOpen","isDeleteDialogOpen","setIsDeleteDialogOpen","loading","setLoading","saving","setSaving","selectedFile","setSelectedFile","snackbar","setSnackbar","formData","setFormData","documentCategories","jsx","Description","CheckCircle","Warning","useEffect","loadDocuments","response","documentsApi","error","showSnackbar","message","severity","getAllDocuments","allDocs","categoryDocs","getStatusColor","status","getStatusText","handleEdit","document","handleDelete","handleSave","handleDeleteConfirm","handleFileUpload","event","file","handleAddNew","jsxs","Container","CircularProgress","Typography","Alert","allDocuments","stats","d","Fragment","Helmet","Box","Button","ArrowBack","Add","Grid","Card","CardContent","category","Accordion","AccordionSummary","ExpandMore","Chip","e","AccordionDetails","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","doc","Stack","IconButton","Visibility","GetApp","Edit","Delete","Fab","Dialog","DialogTitle","DialogContent","TextField","FormControl","InputLabel","Select","MenuItem","CloudUpload","DialogActions","Cancel","Save","Snackbar"],"mappings":"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"}