{"version":3,"file":"index-1eb063e3.js","sources":["../../src/pages/AdminPanel/StaffManagement/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Chip,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Alert,\r\n  Fab,\r\n  Avatar,\r\n  Stack\r\n} from '@mui/material';\r\nimport {\r\n  People,\r\n  Add,\r\n  Edit,\r\n  Delete,\r\n  ArrowBack,\r\n  Save,\r\n  Cancel,\r\n  Phone,\r\n  Email,\r\n  Work\r\n} from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\ninterface StaffMember {\r\n  id: string;\r\n  name: string;\r\n  position: string;\r\n  department: string;\r\n  phone: string;\r\n  email: string;\r\n  hireDate: string;\r\n  status: 'active' | 'inactive' | 'vacation';\r\n  avatar?: string;\r\n  experience: number;\r\n}\r\n\r\nconst StaffManagement = () => {\r\n  const navigate = useNavigate();\r\n  const [staff, setStaff] = useState<StaffMember[]>([]);\r\n  const [selectedStaff, setSelectedStaff] = useState<StaffMember | null>(null);\r\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\r\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    position: '',\r\n    department: '',\r\n    phone: '',\r\n    email: '',\r\n    status: 'active' as 'active' | 'inactive' | 'vacation',\r\n    experience: 0\r\n  });\r\n\r\n  // Моковые данные\r\n  useEffect(() => {\r\n    const mockStaff: StaffMember[] = [\r\n      {\r\n        id: '1',\r\n        name: 'Муталиев Амурклан Ибрагимович',\r\n        position: 'Директор',\r\n        department: 'Администрация',\r\n        phone: '+79286970697',\r\n        email: 'amurklan@mail.ru',\r\n        hireDate: '2020-01-15',\r\n        status: 'active',\r\n        experience: 15\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'Иванов Иван Иванович',\r\n        position: 'Главный инструктор',\r\n        department: 'Обучение',\r\n        phone: '+7928-123-45-67',\r\n        email: 'ivanov@rulplus.ru',\r\n        hireDate: '2021-03-10',\r\n        status: 'active',\r\n        experience: 12\r\n      },\r\n      {\r\n        id: '3',\r\n        name: 'Петрова Анна Сергеевна',\r\n        position: 'Инструктор по теории',\r\n        department: 'Обучение',\r\n        phone: '+7928-987-65-43',\r\n        email: 'petrova@rulplus.ru',\r\n        hireDate: '2022-06-01',\r\n        status: 'active',\r\n        experience: 8\r\n      },\r\n      {\r\n        id: '4',\r\n        name: 'Сидоров Петр Александрович',\r\n        position: 'Инструктор по вождению',\r\n        department: 'Вождение',\r\n        phone: '+7928-555-11-22',\r\n        email: 'sidorov@rulplus.ru',\r\n        hireDate: '2023-01-20',\r\n        status: 'vacation',\r\n        experience: 5\r\n      },\r\n      {\r\n        id: '5',\r\n        name: 'Козлова Мария Дмитриевна',\r\n        position: 'Администратор',\r\n        department: 'Администрация',\r\n        phone: '+7928-333-77-88',\r\n        email: 'kozlova@rulplus.ru',\r\n        hireDate: '2023-09-15',\r\n        status: 'active',\r\n        experience: 3\r\n      }\r\n    ];\r\n    setStaff(mockStaff);\r\n  }, []);\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'success';\r\n      case 'vacation': return 'warning';\r\n      case 'inactive': return 'error';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'Активный';\r\n      case 'vacation': return 'В отпуске';\r\n      case 'inactive': return 'Неактивный';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  const handleEdit = (member: StaffMember) => {\r\n    setSelectedStaff(member);\r\n    setFormData({\r\n      name: member.name,\r\n      position: member.position,\r\n      department: member.department,\r\n      phone: member.phone,\r\n      email: member.email,\r\n      status: member.status,\r\n      experience: member.experience\r\n    });\r\n    setIsEditDialogOpen(true);\r\n  };\r\n\r\n  const handleDelete = (member: StaffMember) => {\r\n    setSelectedStaff(member);\r\n    setIsDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedStaff) {\r\n      // Логика сохранения изменений\r\n      const updatedStaff = staff.map(s => \r\n        s.id === selectedStaff.id \r\n          ? { ...s, ...formData }\r\n          : s\r\n      );\r\n      setStaff(updatedStaff);\r\n    } else {\r\n      // Создание нового сотрудника\r\n      const newStaff: StaffMember = {\r\n        id: Date.now().toString(),\r\n        ...formData,\r\n        hireDate: new Date().toISOString().split('T')[0]\r\n      };\r\n      setStaff([...staff, newStaff]);\r\n    }\r\n    setIsEditDialogOpen(false);\r\n    setSelectedStaff(null);\r\n  };\r\n\r\n  const handleDeleteConfirm = () => {\r\n    if (selectedStaff) {\r\n      setStaff(staff.filter(s => s.id !== selectedStaff.id));\r\n    }\r\n    setIsDeleteDialogOpen(false);\r\n    setSelectedStaff(null);\r\n  };\r\n\r\n  const stats = {\r\n    total: staff.length,\r\n    active: staff.filter(s => s.status === 'active').length,\r\n    vacation: staff.filter(s => s.status === 'vacation').length,\r\n    avgExperience: Math.round(staff.reduce((sum, s) => sum + s.experience, 0) / staff.length)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Управление персоналом - РУЛЬ+ Админ</title>\r\n        <meta name=\"robots\" content=\"noindex,nofollow\" />\r\n      </Helmet>\r\n\r\n      <Container maxWidth=\"xl\" sx={{ py: 4 }}>\r\n        {/* Заголовок */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 4 }}>\r\n          <Button\r\n            startIcon={<ArrowBack />}\r\n            onClick={() => navigate('/admin')}\r\n            sx={{ mr: 2 }}\r\n          >\r\n            Назад\r\n          </Button>\r\n          <People sx={{ mr: 2, fontSize: 32, color: 'primary.main' }} />\r\n          <Box>\r\n            <Typography variant=\"h4\" component=\"h1\" fontWeight=\"bold\">\r\n              Управление персоналом\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\">\r\n              Управление сотрудниками и инструкторами автошколы\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Статистика */}\r\n        <Grid container spacing={3} sx={{ mb: 4 }}>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Всего сотрудников\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"primary\">\r\n                  {stats.total}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Активных\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"success.main\">\r\n                  {stats.active}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  В отпуске\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"warning.main\">\r\n                  {stats.vacation}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Средний стаж (лет)\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"info.main\">\r\n                  {stats.avgExperience}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Таблица сотрудников */}\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Сотрудник</TableCell>\r\n                  <TableCell>Должность</TableCell>\r\n                  <TableCell>Отдел</TableCell>\r\n                  <TableCell>Контакты</TableCell>\r\n                  <TableCell>Дата найма</TableCell>\r\n                  <TableCell>Стаж</TableCell>\r\n                  <TableCell>Статус</TableCell>\r\n                  <TableCell align=\"center\">Действия</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {staff.map((member) => (\r\n                  <TableRow key={member.id} hover>\r\n                    <TableCell>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar sx={{ mr: 2, bgcolor: 'primary.main' }}>\r\n                          {member.name.split(' ').map(n => n[0]).join('')}\r\n                        </Avatar>\r\n                        <Typography variant=\"subtitle2\" fontWeight=\"medium\">\r\n                          {member.name}\r\n                        </Typography>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>{member.position}</TableCell>\r\n                    <TableCell>{member.department}</TableCell>\r\n                    <TableCell>\r\n                      <Stack spacing={0.5}>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <Phone sx={{ fontSize: 16, mr: 0.5, color: 'text.secondary' }} />\r\n                          <Typography variant=\"body2\">{member.phone}</Typography>\r\n                        </Box>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <Email sx={{ fontSize: 16, mr: 0.5, color: 'text.secondary' }} />\r\n                          <Typography variant=\"body2\">{member.email}</Typography>\r\n                        </Box>\r\n                      </Stack>\r\n                    </TableCell>\r\n                    <TableCell>{member.hireDate}</TableCell>\r\n                    <TableCell>{member.experience} лет</TableCell>\r\n                    <TableCell>\r\n                      <Chip \r\n                        label={getStatusText(member.status)} \r\n                        size=\"small\" \r\n                        color={getStatusColor(member.status) as any}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        onClick={() => handleEdit(member)}\r\n                        title=\"Редактировать\"\r\n                      >\r\n                        <Edit />\r\n                      </IconButton>\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        onClick={() => handleDelete(member)}\r\n                        title=\"Удалить\"\r\n                        color=\"error\"\r\n                      >\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n\r\n        {/* Кнопка добавления */}\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          sx={{ position: 'fixed', bottom: 24, right: 24 }}\r\n          onClick={() => {\r\n            setSelectedStaff(null);\r\n            setFormData({\r\n              name: '',\r\n              position: '',\r\n              department: '',\r\n              phone: '',\r\n              email: '',\r\n              status: 'active',\r\n              experience: 0\r\n            });\r\n            setIsEditDialogOpen(true);\r\n          }}\r\n        >\r\n          <Add />\r\n        </Fab>\r\n\r\n        {/* Диалог редактирования */}\r\n        <Dialog open={isEditDialogOpen} onClose={() => setIsEditDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>\r\n            {selectedStaff ? 'Редактировать сотрудника' : 'Добавить нового сотрудника'}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <Box sx={{ pt: 2 }}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"ФИО\"\r\n                    value={formData.name}\r\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Должность\"\r\n                    value={formData.position}\r\n                    onChange={(e) => setFormData({ ...formData, position: e.target.value })}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>Отдел</InputLabel>\r\n                    <Select\r\n                      value={formData.department}\r\n                      label=\"Отдел\"\r\n                      onChange={(e) => setFormData({ ...formData, department: e.target.value })}\r\n                    >\r\n                      <MenuItem value=\"Администрация\">Администрация</MenuItem>\r\n                      <MenuItem value=\"Обучение\">Обучение</MenuItem>\r\n                      <MenuItem value=\"Вождение\">Вождение</MenuItem>\r\n                      <MenuItem value=\"Техническая служба\">Техническая служба</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Телефон\"\r\n                    value={formData.phone}\r\n                    onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    value={formData.email}\r\n                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Стаж работы (лет)\"\r\n                    type=\"number\"\r\n                    value={formData.experience}\r\n                    onChange={(e) => setFormData({ ...formData, experience: parseInt(e.target.value) || 0 })}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>Статус</InputLabel>\r\n                    <Select\r\n                      value={formData.status}\r\n                      label=\"Статус\"\r\n                      onChange={(e) => setFormData({ ...formData, status: e.target.value as any })}\r\n                    >\r\n                      <MenuItem value=\"active\">Активный</MenuItem>\r\n                      <MenuItem value=\"vacation\">В отпуске</MenuItem>\r\n                      <MenuItem value=\"inactive\">Неактивный</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setIsEditDialogOpen(false)} startIcon={<Cancel />}>\r\n              Отмена\r\n            </Button>\r\n            <Button onClick={handleSave} variant=\"contained\" startIcon={<Save />}>\r\n              Сохранить\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Диалог удаления */}\r\n        <Dialog open={isDeleteDialogOpen} onClose={() => setIsDeleteDialogOpen(false)}>\r\n          <DialogTitle>Подтверждение удаления</DialogTitle>\r\n          <DialogContent>\r\n            <Alert severity=\"warning\" sx={{ mb: 2 }}>\r\n              Это действие нельзя отменить!\r\n            </Alert>\r\n            <Typography>\r\n              Вы уверены, что хотите удалить сотрудника \"{selectedStaff?.name}\"?\r\n            </Typography>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setIsDeleteDialogOpen(false)}>\r\n              Отмена\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\" variant=\"contained\">\r\n              Удалить\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffManagement; "],"names":["StaffManagement","navigate","useNavigate","staff","setStaff","useState","selectedStaff","setSelectedStaff","isEditDialogOpen","setIsEditDialogOpen","isDeleteDialogOpen","setIsDeleteDialogOpen","formData","setFormData","useEffect","getStatusColor","status","getStatusText","handleEdit","member","handleDelete","handleSave","updatedStaff","s","newStaff","handleDeleteConfirm","stats","sum","jsxs","Fragment","Helmet","jsx","Container","Box","Button","ArrowBack","People","Typography","Grid","Card","CardContent","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Avatar","n","Stack","Phone","Email","Chip","IconButton","Edit","Delete","Fab","Add","Dialog","DialogTitle","DialogContent","TextField","e","FormControl","InputLabel","Select","MenuItem","DialogActions","Cancel","Save","Alert"],"mappings":"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"}