{"version":3,"file":"index-15178991.js","sources":["../../src/pages/Education/Vacancies/ApplicationForm.tsx","../../src/pages/Education/Vacancies/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Alert,\r\n  CircularProgress,\r\n  Box,\r\n  Typography,\r\n  Chip\r\n} from '@mui/material';\r\nimport { Close, Send, Person, Phone, Email, School } from '@mui/icons-material';\r\n\r\ninterface ApplicationFormProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  program?: {\r\n    id: number;\r\n    category: string;\r\n    name: string;\r\n    cost: number;\r\n    duration: string;\r\n  };\r\n}\r\n\r\ninterface ApplicationData {\r\n  firstName: string;\r\n  lastName: string;\r\n  middleName: string;\r\n  phone: string;\r\n  email: string;\r\n  birthDate: string;\r\n  programId: number;\r\n  preferredStartDate: string;\r\n  additionalInfo: string;\r\n}\r\n\r\nconst ApplicationForm: React.FC<ApplicationFormProps> = ({ open, onClose, program }) => {\r\n  const [formData, setFormData] = useState<ApplicationData>({\r\n    firstName: '',\r\n    lastName: '',\r\n    middleName: '',\r\n    phone: '',\r\n    email: '',\r\n    birthDate: '',\r\n    programId: program?.id || 0,\r\n    preferredStartDate: '',\r\n    additionalInfo: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState<Partial<ApplicationData>>({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [submitMessage, setSubmitMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\r\n\r\n  const handleInputChange = (field: keyof ApplicationData) => (\r\n    event: React.ChangeEvent<HTMLInputElement | { value: unknown }>\r\n  ) => {\r\n    const value = event.target.value as string;\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    \r\n    // Clear error when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Partial<ApplicationData> = {};\r\n\r\n    if (!formData.firstName.trim()) newErrors.firstName = 'Обязательное поле';\r\n    if (!formData.lastName.trim()) newErrors.lastName = 'Обязательное поле';\r\n    if (!formData.phone.trim()) newErrors.phone = 'Обязательное поле';\r\n    if (!formData.email.trim()) newErrors.email = 'Обязательное поле';\r\n    if (!formData.birthDate) newErrors.birthDate = 'Обязательное поле';\r\n    if (!formData.programId) newErrors.programId = 'Выберите программу обучения';\r\n\r\n    // Email validation\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (formData.email && !emailRegex.test(formData.email)) {\r\n      newErrors.email = 'Введите корректный email';\r\n    }\r\n\r\n    // Phone validation (Russian format)\r\n    const phoneRegex = /^(\\+7|8)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/;\r\n    if (formData.phone && !phoneRegex.test(formData.phone.replace(/\\s/g, ''))) {\r\n      newErrors.phone = 'Введите корректный номер телефона';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!validateForm()) return;\r\n\r\n    setLoading(true);\r\n    setSubmitMessage(null);\r\n\r\n    try {\r\n      const response = await fetch(`${import.meta.env.VITE_API_URL || 'http://localhost:5000'}/api/applications/submit`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        setSubmitMessage({ type: 'success', text: 'Заявка успешно отправлена! Мы свяжемся с вами в ближайшее время.' });\r\n        setTimeout(() => {\r\n          onClose();\r\n          setFormData({\r\n            firstName: '',\r\n            lastName: '',\r\n            middleName: '',\r\n            phone: '',\r\n            email: '',\r\n            birthDate: '',\r\n            programId: program?.id || 0,\r\n            preferredStartDate: '',\r\n            additionalInfo: ''\r\n          });\r\n          setSubmitMessage(null);\r\n        }, 3000);\r\n      } else {\r\n        setSubmitMessage({ type: 'error', text: result.message || 'Ошибка при отправке заявки. Попробуйте снова.' });\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка отправки заявки:', error);\r\n      setSubmitMessage({ type: 'error', text: 'Ошибка соединения. Проверьте интернет-соединение и попробуйте снова.' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (!loading) {\r\n      onClose();\r\n      setFormData({\r\n        firstName: '',\r\n        lastName: '',\r\n        middleName: '',\r\n        phone: '',\r\n        email: '',\r\n        birthDate: '',\r\n        programId: program?.id || 0,\r\n        preferredStartDate: '',\r\n        additionalInfo: ''\r\n      });\r\n      setErrors({});\r\n      setSubmitMessage(null);\r\n    }\r\n  };\r\n\r\n  const programs = [\r\n    { id: 1, category: 'B', name: 'Категория B - Легковые автомобили', cost: 35000 },\r\n    { id: 2, category: 'A', name: 'Категория A - Мотоциклы', cost: 25000 },\r\n    { id: 3, category: 'C', name: 'Категория C - Грузовые автомобили', cost: 45000 },\r\n  ];\r\n\r\n  return (\r\n    <Dialog \r\n      open={open} \r\n      onClose={handleClose}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      PaperProps={{\r\n        sx: {\r\n          borderRadius: 2,\r\n          maxHeight: '90vh'\r\n        }\r\n      }}\r\n    >\r\n      <DialogTitle sx={{ \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-between',\r\n        borderBottom: '1px solid',\r\n        borderColor: 'divider',\r\n        pb: 2\r\n      }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <School sx={{ mr: 1, color: 'primary.main' }} />\r\n          <Typography variant=\"h6\">Заявка на обучение</Typography>\r\n        </Box>\r\n        <Button\r\n          onClick={handleClose}\r\n          disabled={loading}\r\n          sx={{ minWidth: 'auto', p: 0.5 }}\r\n        >\r\n          <Close />\r\n        </Button>\r\n      </DialogTitle>\r\n\r\n      <DialogContent sx={{ pt: 3 }}>\r\n        {submitMessage && (\r\n          <Alert severity={submitMessage.type} sx={{ mb: 3 }}>\r\n            {submitMessage.text}\r\n          </Alert>\r\n        )}\r\n\r\n        {program && (\r\n          <Box sx={{ mb: 3, p: 2, bgcolor: 'primary.light', borderRadius: 1 }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              <strong>Выбранная программа:</strong>\r\n            </Typography>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\r\n              <Chip label={`Категория ${program.category}`} color=\"primary\" size=\"small\" />\r\n              <Typography variant=\"body2\" color=\"text.primary\">\r\n                {program.cost.toLocaleString('ru-RU')} ₽\r\n              </Typography>\r\n            </Box>\r\n            <Typography variant=\"body2\" color=\"text.primary\">\r\n              {program.name}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n\r\n        <Grid container spacing={3}>\r\n          {/* Personal Information */}\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center' }}>\r\n              <Person sx={{ mr: 1, fontSize: '1.2rem' }} />\r\n              Личные данные\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Фамилия *\"\r\n              value={formData.lastName}\r\n              onChange={handleInputChange('lastName')}\r\n              error={!!errors.lastName}\r\n              helperText={errors.lastName}\r\n              disabled={loading}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Имя *\"\r\n              value={formData.firstName}\r\n              onChange={handleInputChange('firstName')}\r\n              error={!!errors.firstName}\r\n              helperText={errors.firstName}\r\n              disabled={loading}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Отчество\"\r\n              value={formData.middleName}\r\n              onChange={handleInputChange('middleName')}\r\n              disabled={loading}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Дата рождения *\"\r\n              type=\"date\"\r\n              value={formData.birthDate}\r\n              onChange={handleInputChange('birthDate')}\r\n              error={!!errors.birthDate}\r\n              helperText={errors.birthDate}\r\n              disabled={loading}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <FormControl fullWidth error={!!errors.programId} disabled={loading}>\r\n              <InputLabel>Программа обучения *</InputLabel>\r\n              <Select\r\n                value={formData.programId}\r\n                onChange={handleInputChange('programId')}\r\n                label=\"Программа обучения *\"\r\n              >\r\n                {programs.map((prog) => (\r\n                  <MenuItem key={prog.id} value={prog.id}>\r\n                    {prog.name} ({prog.cost.toLocaleString('ru-RU')} ₽)\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          {/* Contact Information */}\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\r\n              <Phone sx={{ mr: 1, fontSize: '1.2rem' }} />\r\n              Контактная информация\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Телефон *\"\r\n              value={formData.phone}\r\n              onChange={handleInputChange('phone')}\r\n              error={!!errors.phone}\r\n              helperText={errors.phone || 'Формат: +7 (999) 123-45-67'}\r\n              disabled={loading}\r\n              placeholder=\"+7 (999) 123-45-67\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Email *\"\r\n              type=\"email\"\r\n              value={formData.email}\r\n              onChange={handleInputChange('email')}\r\n              error={!!errors.email}\r\n              helperText={errors.email}\r\n              disabled={loading}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Желаемая дата начала обучения\"\r\n              type=\"date\"\r\n              value={formData.preferredStartDate}\r\n              onChange={handleInputChange('preferredStartDate')}\r\n              disabled={loading}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Дополнительная информация\"\r\n              multiline\r\n              rows={3}\r\n              value={formData.additionalInfo}\r\n              onChange={handleInputChange('additionalInfo')}\r\n              disabled={loading}\r\n              placeholder=\"Укажите дополнительную информацию, если необходимо...\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Alert severity=\"info\" sx={{ mt: 3 }}>\r\n          <Typography variant=\"body2\">\r\n            <strong>Важно:</strong> После отправки заявки мы свяжемся с вами для уточнения деталей \r\n            и согласования времени для подачи документов.\r\n          </Typography>\r\n        </Alert>\r\n      </DialogContent>\r\n\r\n      <DialogActions sx={{ p: 3, pt: 2 }}>\r\n        <Button \r\n          onClick={handleClose} \r\n          disabled={loading}\r\n          color=\"inherit\"\r\n        >\r\n          Отмена\r\n        </Button>\r\n        <Button\r\n          onClick={handleSubmit}\r\n          variant=\"contained\"\r\n          disabled={loading}\r\n          startIcon={loading ? <CircularProgress size={20} /> : <Send />}\r\n        >\r\n          {loading ? 'Отправка...' : 'Отправить заявку'}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ApplicationForm; ","import { Container, Typography, Box, Card, CardContent, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Chip, Alert, Button } from '@mui/material';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { People, EventNote, School, TrendingUp, CheckCircle, Phone } from '@mui/icons-material';\r\nimport { useState } from 'react';\r\nimport ApplicationForm from './ApplicationForm';\r\n\r\nconst VacanciesPage = () => {\r\n  const [applicationFormOpen, setApplicationFormOpen] = useState(false);\r\n  const [selectedProgram, setSelectedProgram] = useState<any>(null);\r\n\r\n  // В будущем эти данные будут загружаться из API\r\n  const vacanciesData = {\r\n    currentPeriod: '2024 учебный год',\r\n    lastUpdated: new Date().toISOString(),\r\n    programs: [\r\n      {\r\n        id: 1,\r\n        category: 'B',\r\n        name: 'Профессиональная подготовка водителей транспортных средств категории \"B\"',\r\n        totalPlaces: 120,\r\n        occupiedPlaces: 85,\r\n        vacantPlaces: 35,\r\n        duration: '2.5 месяца',\r\n        cost: 35000,\r\n        startDates: ['2024-03-15', '2024-04-01', '2024-04-15', '2024-05-01'],\r\n        schedule: 'Утренние и вечерние группы'\r\n      },\r\n      {\r\n        id: 2,\r\n        category: 'A',\r\n        name: 'Профессиональная подготовка водителей транспортных средств категории \"A\"',\r\n        totalPlaces: 40,\r\n        occupiedPlaces: 28,\r\n        vacantPlaces: 12,\r\n        duration: '2 месяца',\r\n        cost: 25000,\r\n        startDates: ['2024-04-01', '2024-05-15', '2024-07-01'],\r\n        schedule: 'Сезонные группы (март-октябрь)'\r\n      },\r\n      {\r\n        id: 3,\r\n        category: 'C',\r\n        name: 'Профессиональная подготовка водителей транспортных средств категории \"C\"',\r\n        totalPlaces: 60,\r\n        occupiedPlaces: 42,\r\n        vacantPlaces: 18,\r\n        duration: '3 месяца',\r\n        cost: 45000,\r\n        startDates: ['2024-04-01', '2024-05-01', '2024-06-01'],\r\n        schedule: 'Утренние и вечерние группы'\r\n      }\r\n    ],\r\n    admissionRequirements: [\r\n      'Достижение установленного возраста (16 лет для категории A, 17 лет для категории B, 18 лет для категории C)',\r\n      'Медицинская справка установленного образца',\r\n      'Документ, удостоверяющий личность',\r\n      'Справка о несудимости (для категории C)',\r\n      'Заключение договора и оплата обучения'\r\n    ],\r\n    documents: [\r\n      'Паспорт гражданина РФ или иной документ, удостоверяющий личность',\r\n      'Медицинская справка формы 003-В/у',\r\n      'Фотографии 3x4 см (4 шт.)',\r\n      'СНИЛС',\r\n      'Справка о несудимости (для кат. C)'\r\n    ],\r\n    admissionProcedure: [\r\n      'Подача заявления и документов',\r\n      'Заключение договора на оказание образовательных услуг',\r\n      'Оплата обучения (возможна рассрочка)',\r\n      'Формирование учебной группы',\r\n      'Начало обучения согласно расписанию'\r\n    ],\r\n    contacts: {\r\n      phone: '+7 (928) 697-06-97',\r\n      email: 'amurklan@mail.ru',\r\n      address: '123456, г. Назрань, ул. Примерная, д. 123, оф. 45',\r\n      workTime: 'Пн-Пт: 09:00-18:00, Сб: 10:00-16:00'\r\n    }\r\n  };\r\n\r\n  const getOccupancyColor = (vacantPlaces: number, totalPlaces: number) => {\r\n    const percentage = (vacantPlaces / totalPlaces) * 100;\r\n    if (percentage > 50) return 'success';\r\n    if (percentage > 20) return 'warning';\r\n    return 'error';\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('ru-RU');\r\n  };\r\n\r\n  const handleApplyForTraining = (program: any) => {\r\n    setSelectedProgram(program);\r\n    setApplicationFormOpen(true);\r\n  };\r\n\r\n  const handleCloseApplicationForm = () => {\r\n    setApplicationFormOpen(false);\r\n    setSelectedProgram(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Вакантные места для приема - Автошкола Драйв</title>\r\n        <meta \r\n          name=\"description\" \r\n          content=\"Вакантные места для приема на обучение в автошколе: количество свободных мест по программам подготовки водителей категорий A, B, C.\" \r\n        />\r\n      </Helmet>\r\n\r\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n        {/* Заголовок страницы */}\r\n        <Box sx={{ mb: 4 }}>\r\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom>\r\n            Вакантные места для приема обучающихся\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"text.secondary\">\r\n            Информация о количестве вакантных мест для приема на обучение по образовательным программам \r\n            профессиональной подготовки водителей транспортных средств\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Информационный блок */}\r\n        <Alert severity=\"info\" sx={{ mb: 4 }}>\r\n          <Typography variant=\"body1\" gutterBottom>\r\n            <strong>Учебный период:</strong> {vacanciesData.currentPeriod}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            Данные обновляются еженедельно. Последнее обновление: {formatDate(vacanciesData.lastUpdated)}\r\n          </Typography>\r\n        </Alert>\r\n\r\n        {/* Общая статистика */}\r\n        <Card sx={{ mb: 4 }}>\r\n          <CardContent>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n              <TrendingUp sx={{ mr: 2, color: 'primary.main' }} />\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                Общая статистика по вакантным местам\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={4}>\r\n                <Box sx={{ textAlign: 'center', p: 3, bgcolor: 'primary.light', borderRadius: 2 }}>\r\n                  <Typography variant=\"h2\" color=\"primary.contrastText\" gutterBottom>\r\n                    {vacanciesData.programs.reduce((sum, p) => sum + p.totalPlaces, 0)}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"primary.contrastText\">\r\n                    Общее количество мест\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={4}>\r\n                <Box sx={{ textAlign: 'center', p: 3, bgcolor: 'warning.light', borderRadius: 2 }}>\r\n                  <Typography variant=\"h2\" color=\"warning.contrastText\" gutterBottom>\r\n                    {vacanciesData.programs.reduce((sum, p) => sum + p.occupiedPlaces, 0)}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"warning.contrastText\">\r\n                    Занято мест\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={4}>\r\n                <Box sx={{ textAlign: 'center', p: 3, bgcolor: 'success.light', borderRadius: 2 }}>\r\n                  <Typography variant=\"h2\" color=\"success.contrastText\" gutterBottom>\r\n                    {vacanciesData.programs.reduce((sum, p) => sum + p.vacantPlaces, 0)}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"success.contrastText\">\r\n                    Свободных мест\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Детальная информация по программам */}\r\n        <Card sx={{ mb: 4 }}>\r\n          <CardContent>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n              <School sx={{ mr: 2, color: 'primary.main' }} />\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                Вакантные места по образовательным программам\r\n              </Typography>\r\n            </Box>\r\n\r\n            <TableContainer component={Paper} variant=\"outlined\">\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell><strong>Категория</strong></TableCell>\r\n                    <TableCell><strong>Всего мест</strong></TableCell>\r\n                    <TableCell><strong>Занято</strong></TableCell>\r\n                    <TableCell><strong>Свободно</strong></TableCell>\r\n                    <TableCell><strong>Стоимость</strong></TableCell>\r\n                    <TableCell><strong>Длительность</strong></TableCell>\r\n                    <TableCell><strong>Статус</strong></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {vacanciesData.programs.map((program) => (\r\n                    <TableRow key={program.id}>\r\n                      <TableCell>\r\n                        <Chip label={program.category} color=\"primary\" />\r\n                      </TableCell>\r\n                      <TableCell>{program.totalPlaces}</TableCell>\r\n                      <TableCell>{program.occupiedPlaces}</TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"body1\" fontWeight=\"bold\" color=\"success.main\">\r\n                          {program.vacantPlaces}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>{program.cost.toLocaleString('ru-RU')} ₽</TableCell>\r\n                      <TableCell>{program.duration}</TableCell>\r\n                      <TableCell>\r\n                        <Chip \r\n                          label={program.vacantPlaces > 0 ? 'Набор открыт' : 'Места закончились'}\r\n                          color={program.vacantPlaces > 0 ? 'success' : 'error'}\r\n                          size=\"small\"\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Программы и даты начала */}\r\n        <Grid container spacing={3} sx={{ mb: 4 }}>\r\n          {vacanciesData.programs.map((program) => (\r\n            <Grid item xs={12} md={4} key={program.id}>\r\n              <Card sx={{ height: '100%' }}>\r\n                <CardContent>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <Chip label={`Категория ${program.category}`} color=\"primary\" sx={{ mr: 2 }} />\r\n                    <Chip \r\n                      label={`${program.vacantPlaces} мест`}\r\n                      color={getOccupancyColor(program.vacantPlaces, program.totalPlaces)}\r\n                      size=\"small\"\r\n                    />\r\n                  </Box>\r\n\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    {program.name}\r\n                  </Typography>\r\n\r\n                  <Box sx={{ mb: 2 }}>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Длительность:</strong> {program.duration}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Стоимость:</strong> {program.cost.toLocaleString('ru-RU')} ₽\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Расписание:</strong> {program.schedule}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Typography variant=\"body2\" gutterBottom>\r\n                    <strong>Ближайшие даты начала обучения:</strong>\r\n                  </Typography>\r\n                  <Box sx={{ pl: 2, mb: 2 }}>\r\n                    {program.startDates.slice(0, 3).map((date, index) => (\r\n                      <Typography key={index} variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                        • {formatDate(date)}\r\n                      </Typography>\r\n                    ))}\r\n                  </Box>\r\n\r\n                  <Button \r\n                    variant=\"contained\" \r\n                    fullWidth \r\n                    disabled={program.vacantPlaces === 0}\r\n                    sx={{ mt: 'auto' }}\r\n                    onClick={() => handleApplyForTraining(program)}\r\n                  >\r\n                    {program.vacantPlaces > 0 ? 'Записаться на обучение' : 'Места закончились'}\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        {/* Условия приема */}\r\n        <Grid container spacing={3} sx={{ mb: 4 }}>\r\n          <Grid item xs={12} md={6}>\r\n            <Card sx={{ height: '100%' }}>\r\n              <CardContent>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n                  <CheckCircle sx={{ mr: 2, color: 'primary.main' }} />\r\n                  <Typography variant=\"h5\" component=\"h2\">\r\n                    Требования для поступления\r\n                  </Typography>\r\n                </Box>\r\n\r\n                {vacanciesData.admissionRequirements.map((requirement, index) => (\r\n                  <Typography key={index} variant=\"body2\" sx={{ mb: 1 }}>\r\n                    • {requirement}\r\n                  </Typography>\r\n                ))}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Card sx={{ height: '100%' }}>\r\n              <CardContent>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n                  <EventNote sx={{ mr: 2, color: 'primary.main' }} />\r\n                  <Typography variant=\"h5\" component=\"h2\">\r\n                    Необходимые документы\r\n                  </Typography>\r\n                </Box>\r\n\r\n                {vacanciesData.documents.map((document, index) => (\r\n                  <Typography key={index} variant=\"body2\" sx={{ mb: 1 }}>\r\n                    • {document}\r\n                  </Typography>\r\n                ))}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Порядок поступления */}\r\n        <Card sx={{ mb: 4 }}>\r\n          <CardContent>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n              <People sx={{ mr: 2, color: 'primary.main' }} />\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                Порядок поступления\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Grid container spacing={2}>\r\n              {vacanciesData.admissionProcedure.map((step, index) => (\r\n                <Grid item xs={12} sm={6} md={4} key={index}>\r\n                  <Box sx={{ \r\n                    p: 2, \r\n                    border: 2, \r\n                    borderColor: 'primary.main', \r\n                    borderRadius: 2,\r\n                    textAlign: 'center',\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    justifyContent: 'center'\r\n                  }}>\r\n                    <Typography variant=\"h4\" color=\"primary.main\" gutterBottom>\r\n                      {index + 1}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      {step}\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Контактная информация */}\r\n        <Card>\r\n          <CardContent>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n              <Phone sx={{ mr: 2, color: 'primary.main' }} />\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                Контактная информация для поступающих\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <Typography variant=\"body1\" gutterBottom>\r\n                  <strong>Телефон приемной комиссии:</strong>\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"primary\" gutterBottom>\r\n                  {vacanciesData.contacts.phone}\r\n                </Typography>\r\n\r\n                <Typography variant=\"body1\" gutterBottom>\r\n                  <strong>Электронная почта:</strong>\r\n                </Typography>\r\n                <Typography variant=\"body1\" gutterBottom>\r\n                  {vacanciesData.contacts.email}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <Typography variant=\"body1\" gutterBottom>\r\n                  <strong>Адрес:</strong>\r\n                </Typography>\r\n                <Typography variant=\"body1\" gutterBottom>\r\n                  {vacanciesData.contacts.address}\r\n                </Typography>\r\n\r\n                <Typography variant=\"body1\" gutterBottom>\r\n                  <strong>Время работы приемной комиссии:</strong>\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {vacanciesData.contacts.workTime}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Alert severity=\"success\" sx={{ mt: 3 }}>\r\n              <Typography variant=\"body2\">\r\n                📞 <strong>Консультации по телефону:</strong> Наши специалисты готовы ответить на все ваши вопросы \r\n                о поступлении, программах обучения и условиях оплаты.\r\n              </Typography>\r\n            </Alert>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Дата обновления */}\r\n        <Box sx={{ mt: 4, textAlign: 'center' }}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            Дата последнего обновления информации: {formatDate(vacanciesData.lastUpdated)}\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n\r\n      {/* Application Form Dialog */}\r\n      <ApplicationForm\r\n        open={applicationFormOpen}\r\n        onClose={handleCloseApplicationForm}\r\n        program={selectedProgram}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VacanciesPage; "],"names":["ApplicationForm","open","onClose","program","formData","setFormData","useState","errors","setErrors","loading","setLoading","submitMessage","setSubmitMessage","handleInputChange","field","event","value","prev","validateForm","newErrors","emailRegex","phoneRegex","handleSubmit","response","result","error","handleClose","programs","jsxs","Dialog","DialogTitle","Box","jsx","School","Typography","Button","Close","DialogContent","Alert","Chip","Grid","Person","TextField","FormControl","InputLabel","Select","prog","MenuItem","Phone","DialogActions","CircularProgress","Send","VacanciesPage","applicationFormOpen","setApplicationFormOpen","selectedProgram","setSelectedProgram","vacanciesData","getOccupancyColor","vacantPlaces","totalPlaces","percentage","formatDate","dateString","handleApplyForTraining","handleCloseApplicationForm","Fragment","Helmet","Container","Card","CardContent","TrendingUp","sum","p","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","date","index","CheckCircle","requirement","EventNote","document","People","step"],"mappings":"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"}