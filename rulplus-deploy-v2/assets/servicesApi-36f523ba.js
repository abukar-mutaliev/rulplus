const o={getServices:async()=>{try{const t=await fetch("/api/services");if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return await t.json()}catch(t){throw console.error("Ошибка при загрузке услуг:",t),t}},createMainService:async t=>{try{const r=await fetch("/api/services/main",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return await r.json()}catch(r){throw console.error("Ошибка при создании основной услуги:",r),r}},updateMainService:async(t,r)=>{try{const e=await fetch(`/api/services/main/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.json()}catch(e){throw console.error("Ошибка при обновлении основной услуги:",e),e}},deleteMainService:async t=>{try{const r=await fetch(`/api/services/main/${t}`,{method:"DELETE"});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`)}catch(r){throw console.error("Ошибка при удалении основной услуги:",r),r}},createAdditionalService:async t=>{try{const r=await fetch("/api/services/additional",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return await r.json()}catch(r){throw console.error("Ошибка при создании дополнительной услуги:",r),r}},updateAdditionalService:async(t,r)=>{try{const e=await fetch(`/api/services/additional/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.json()}catch(e){throw console.error("Ошибка при обновлении дополнительной услуги:",e),e}},deleteAdditionalService:async t=>{try{const r=await fetch(`/api/services/additional/${t}`,{method:"DELETE"});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`)}catch(r){throw console.error("Ошибка при удалении дополнительной услуги:",r),r}},updatePaymentMethods:async t=>{try{const r=await fetch("/api/services/payment-methods",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return await r.json()}catch(r){throw console.error("Ошибка при обновлении способов оплаты:",r),r}},updatePaymentSchedule:async t=>{try{const r=await fetch("/api/services/payment-schedule",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return await r.json()}catch(r){throw console.error("Ошибка при обновлении графика оплаты:",r),r}},updateDiscounts:async t=>{try{const r=await fetch("/api/services/discounts",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return await r.json()}catch(r){throw console.error("Ошибка при обновлении скидок:",r),r}},updateContractInfo:async t=>{try{const r=await fetch("/api/services/contract-info",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return await r.json()}catch(r){throw console.error("Ошибка при обновлении информации о договоре:",r),r}}};export{o as s};
//# sourceMappingURL=servicesApi-36f523ba.js.map
