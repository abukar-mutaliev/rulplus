{"version":3,"file":"index-ed49d6b6.js","sources":["../../src/pages/AdminPanel/FleetManagement/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Chip,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Alert,\r\n  Fab,\r\n  Avatar\r\n} from '@mui/material';\r\nimport {\r\n  DirectionsCar,\r\n  Add,\r\n  Edit,\r\n  Delete,\r\n  ArrowBack,\r\n  Save,\r\n  Cancel,\r\n  Build,\r\n  Warning,\r\n  CheckCircle\r\n} from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\ninterface Vehicle {\r\n  id: string;\r\n  model: string;\r\n  plateNumber: string;\r\n  year: number;\r\n  category: string;\r\n  status: 'active' | 'maintenance' | 'repair' | 'inactive';\r\n  instructor: string;\r\n  mileage: number;\r\n  lastService: string;\r\n  nextService: string;\r\n  fuelType: string;\r\n  color: string;\r\n}\r\n\r\nconst FleetManagement = () => {\r\n  const navigate = useNavigate();\r\n  const [vehicles, setVehicles] = useState<Vehicle[]>([]);\r\n  const [selectedVehicle, setSelectedVehicle] = useState<Vehicle | null>(null);\r\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\r\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    model: '',\r\n    plateNumber: '',\r\n    year: new Date().getFullYear(),\r\n    category: '',\r\n    status: 'active' as 'active' | 'maintenance' | 'repair' | 'inactive',\r\n    instructor: '',\r\n    mileage: 0,\r\n    lastService: '',\r\n    nextService: '',\r\n    fuelType: 'Бензин',\r\n    color: ''\r\n  });\r\n\r\n  // Моковые данные\r\n  useEffect(() => {\r\n    const mockVehicles: Vehicle[] = [\r\n      {\r\n        id: '1',\r\n        model: 'Lada Granta',\r\n        plateNumber: 'А123ВС99',\r\n        year: 2022,\r\n        category: 'Категория B',\r\n        status: 'active',\r\n        instructor: 'Иванов И.И.',\r\n        mileage: 45000,\r\n        lastService: '2024-01-15',\r\n        nextService: '2024-04-15',\r\n        fuelType: 'Бензин',\r\n        color: 'Белый'\r\n      },\r\n      {\r\n        id: '2',\r\n        model: 'Hyundai Solaris',\r\n        plateNumber: 'В456ЕК99',\r\n        year: 2023,\r\n        category: 'Категория B',\r\n        status: 'active',\r\n        instructor: 'Петрова А.С.',\r\n        mileage: 28000,\r\n        lastService: '2024-01-20',\r\n        nextService: '2024-04-20',\r\n        fuelType: 'Бензин',\r\n        color: 'Серый'\r\n      }\r\n    ];\r\n    setVehicles(mockVehicles);\r\n  }, []);\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'success';\r\n      case 'maintenance': return 'warning';\r\n      case 'repair': return 'error';\r\n      case 'inactive': return 'default';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'Активный';\r\n      case 'maintenance': return 'ТО';\r\n      case 'repair': return 'Ремонт';\r\n      case 'inactive': return 'Неактивный';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  const handleEdit = (vehicle: Vehicle) => {\r\n    setSelectedVehicle(vehicle);\r\n    setFormData({\r\n      model: vehicle.model,\r\n      plateNumber: vehicle.plateNumber,\r\n      year: vehicle.year,\r\n      category: vehicle.category,\r\n      status: vehicle.status,\r\n      instructor: vehicle.instructor,\r\n      mileage: vehicle.mileage,\r\n      lastService: vehicle.lastService,\r\n      nextService: vehicle.nextService,\r\n      fuelType: vehicle.fuelType,\r\n      color: vehicle.color\r\n    });\r\n    setIsEditDialogOpen(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedVehicle) {\r\n      const updatedVehicles = vehicles.map(v => \r\n        v.id === selectedVehicle.id ? { ...v, ...formData } : v\r\n      );\r\n      setVehicles(updatedVehicles);\r\n    }\r\n    setIsEditDialogOpen(false);\r\n    setSelectedVehicle(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Управление автопарком - РУЛЬ+ Админ</title>\r\n        <meta name=\"robots\" content=\"noindex,nofollow\" />\r\n      </Helmet>\r\n\r\n      <Container maxWidth=\"xl\" sx={{ py: 4 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 4 }}>\r\n          <Button\r\n            startIcon={<ArrowBack />}\r\n            onClick={() => navigate('/admin')}\r\n            sx={{ mr: 2 }}\r\n          >\r\n            Назад\r\n          </Button>\r\n          <DirectionsCar sx={{ mr: 2, fontSize: 32, color: 'primary.main' }} />\r\n          <Box>\r\n            <Typography variant=\"h4\" component=\"h1\" fontWeight=\"bold\">\r\n              Управление автопарком\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\">\r\n              Управление транспортными средствами автошколы\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Транспортное средство</TableCell>\r\n                  <TableCell>Категория</TableCell>\r\n                  <TableCell>Инструктор</TableCell>\r\n                  <TableCell>Статус</TableCell>\r\n                  <TableCell align=\"center\">Действия</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {vehicles.map((vehicle) => (\r\n                  <TableRow key={vehicle.id} hover>\r\n                    <TableCell>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar sx={{ mr: 2, bgcolor: 'primary.main' }}>\r\n                          <DirectionsCar />\r\n                        </Avatar>\r\n                        <Box>\r\n                          <Typography variant=\"subtitle2\" fontWeight=\"medium\">\r\n                            {vehicle.model}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {vehicle.plateNumber}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>{vehicle.category}</TableCell>\r\n                    <TableCell>{vehicle.instructor}</TableCell>\r\n                    <TableCell>\r\n                      <Chip \r\n                        label={getStatusText(vehicle.status)} \r\n                        size=\"small\" \r\n                        color={getStatusColor(vehicle.status) as any}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        onClick={() => handleEdit(vehicle)}\r\n                        title=\"Редактировать\"\r\n                      >\r\n                        <Edit />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n\r\n        <Dialog open={isEditDialogOpen} onClose={() => setIsEditDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Редактировать ТС</DialogTitle>\r\n          <DialogContent>\r\n            <Box sx={{ pt: 2 }}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Модель\"\r\n                value={formData.model}\r\n                onChange={(e) => setFormData({ ...formData, model: e.target.value })}\r\n                sx={{ mb: 2 }}\r\n              />\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setIsEditDialogOpen(false)} startIcon={<Cancel />}>\r\n              Отмена\r\n            </Button>\r\n            <Button onClick={handleSave} variant=\"contained\" startIcon={<Save />}>\r\n              Сохранить\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FleetManagement; "],"names":["FleetManagement","navigate","useNavigate","vehicles","setVehicles","useState","selectedVehicle","setSelectedVehicle","isEditDialogOpen","setIsEditDialogOpen","formData","setFormData","useEffect","getStatusColor","status","getStatusText","handleEdit","vehicle","handleSave","updatedVehicles","v","jsxs","Fragment","Helmet","jsx","Container","Box","Button","ArrowBack","DirectionsCar","Typography","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Avatar","Chip","IconButton","Edit","Dialog","DialogTitle","DialogContent","TextField","e","DialogActions","Cancel","Save"],"mappings":"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"}