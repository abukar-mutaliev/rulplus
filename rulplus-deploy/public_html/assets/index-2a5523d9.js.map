{"version":3,"file":"index-2a5523d9.js","sources":["../../src/pages/AdminPanel/ContentManagement/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Chip,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Alert,\r\n  Fab,\r\n  Tabs,\r\n  Tab\r\n} from '@mui/material';\r\nimport {\r\n  Article,\r\n  Add,\r\n  Edit,\r\n  Delete,\r\n  Visibility,\r\n  VisibilityOff,\r\n  ArrowBack,\r\n  Save,\r\n  Cancel\r\n} from '@mui/icons-material';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\ninterface ContentItem {\r\n  id: string;\r\n  title: string;\r\n  type: 'article' | 'news' | 'page';\r\n  status: 'published' | 'draft' | 'archived';\r\n  author: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  views: number;\r\n}\r\n\r\nconst ContentManagement = () => {\r\n  const navigate = useNavigate();\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [contents, setContents] = useState<ContentItem[]>([]);\r\n  const [selectedContent, setSelectedContent] = useState<ContentItem | null>(null);\r\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\r\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    type: 'article' as 'article' | 'news' | 'page',\r\n    status: 'draft' as 'published' | 'draft' | 'archived',\r\n    content: ''\r\n  });\r\n\r\n  // Моковые данные\r\n  useEffect(() => {\r\n    const mockContents: ContentItem[] = [\r\n      {\r\n        id: '1',\r\n        title: 'Новые правила дорожного движения 2024',\r\n        type: 'article',\r\n        status: 'published',\r\n        author: 'Муталиев А.И.',\r\n        createdAt: '2024-01-15',\r\n        updatedAt: '2024-01-20',\r\n        views: 256\r\n      },\r\n      {\r\n        id: '2',\r\n        title: 'Открытие нового филиала в Назрани',\r\n        type: 'news',\r\n        status: 'published',\r\n        author: 'Администратор',\r\n        createdAt: '2024-01-10',\r\n        updatedAt: '2024-01-10',\r\n        views: 142\r\n      },\r\n      {\r\n        id: '3',\r\n        title: 'Основные сведения об автошколе',\r\n        type: 'page',\r\n        status: 'published',\r\n        author: 'Муталиев А.И.',\r\n        createdAt: '2024-01-01',\r\n        updatedAt: '2024-01-15',\r\n        views: 89\r\n      },\r\n      {\r\n        id: '4',\r\n        title: 'Скидки для студентов',\r\n        type: 'article',\r\n        status: 'draft',\r\n        author: 'Администратор',\r\n        createdAt: '2024-01-22',\r\n        updatedAt: '2024-01-22',\r\n        views: 0\r\n      }\r\n    ];\r\n    setContents(mockContents);\r\n  }, []);\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const getFilteredContents = () => {\r\n    switch (tabValue) {\r\n      case 0: return contents; // Все\r\n      case 1: return contents.filter(c => c.type === 'article');\r\n      case 2: return contents.filter(c => c.type === 'news');\r\n      case 3: return contents.filter(c => c.type === 'page');\r\n      default: return contents;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'published': return 'success';\r\n      case 'draft': return 'warning';\r\n      case 'archived': return 'default';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'published': return 'Опубликовано';\r\n      case 'draft': return 'Черновик';\r\n      case 'archived': return 'Архив';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  const getTypeText = (type: string) => {\r\n    switch (type) {\r\n      case 'article': return 'Статья';\r\n      case 'news': return 'Новость';\r\n      case 'page': return 'Страница';\r\n      default: return type;\r\n    }\r\n  };\r\n\r\n  const handleEdit = (content: ContentItem) => {\r\n    setSelectedContent(content);\r\n    setFormData({\r\n      title: content.title,\r\n      type: content.type,\r\n      status: content.status,\r\n      content: ''\r\n    });\r\n    setIsEditDialogOpen(true);\r\n  };\r\n\r\n  const handleDelete = (content: ContentItem) => {\r\n    setSelectedContent(content);\r\n    setIsDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedContent) {\r\n      // Логика сохранения изменений\r\n      const updatedContents = contents.map(c => \r\n        c.id === selectedContent.id \r\n          ? { ...c, ...formData, updatedAt: new Date().toISOString().split('T')[0] }\r\n          : c\r\n      );\r\n      setContents(updatedContents);\r\n    }\r\n    setIsEditDialogOpen(false);\r\n    setSelectedContent(null);\r\n  };\r\n\r\n  const handleDeleteConfirm = () => {\r\n    if (selectedContent) {\r\n      setContents(contents.filter(c => c.id !== selectedContent.id));\r\n    }\r\n    setIsDeleteDialogOpen(false);\r\n    setSelectedContent(null);\r\n  };\r\n\r\n  const handleStatusToggle = (content: ContentItem) => {\r\n    const newStatus = content.status === 'published' ? 'draft' : 'published';\r\n    const updatedContents = contents.map(c => \r\n      c.id === content.id \r\n        ? { ...c, status: newStatus as 'published' | 'draft' | 'archived' }\r\n        : c\r\n    );\r\n    setContents(updatedContents);\r\n  };\r\n\r\n  const stats = {\r\n    total: contents.length,\r\n    published: contents.filter(c => c.status === 'published').length,\r\n    draft: contents.filter(c => c.status === 'draft').length,\r\n    totalViews: contents.reduce((sum, c) => sum + c.views, 0)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Управление контентом - РУЛЬ+ Админ</title>\r\n        <meta name=\"robots\" content=\"noindex,nofollow\" />\r\n      </Helmet>\r\n\r\n      <Container maxWidth=\"xl\" sx={{ py: 4 }}>\r\n        {/* Заголовок */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 4 }}>\r\n          <Button\r\n            startIcon={<ArrowBack />}\r\n            onClick={() => navigate('/admin')}\r\n            sx={{ mr: 2 }}\r\n          >\r\n            Назад\r\n          </Button>\r\n          <Article sx={{ mr: 2, fontSize: 32, color: 'primary.main' }} />\r\n          <Box>\r\n            <Typography variant=\"h4\" component=\"h1\" fontWeight=\"bold\">\r\n              Управление контентом\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\">\r\n              Управление статьями, новостями и страницами сайта\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Статистика */}\r\n        <Grid container spacing={3} sx={{ mb: 4 }}>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Всего материалов\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"primary\">\r\n                  {stats.total}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Опубликовано\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"success.main\">\r\n                  {stats.published}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Черновики\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"warning.main\">\r\n                  {stats.draft}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"text.secondary\" gutterBottom>\r\n                  Всего просмотров\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"info.main\">\r\n                  {stats.totalViews}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Вкладки фильтрации */}\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\r\n          <Tabs value={tabValue} onChange={handleTabChange}>\r\n            <Tab label=\"Все\" />\r\n            <Tab label=\"Статьи\" />\r\n            <Tab label=\"Новости\" />\r\n            <Tab label=\"Страницы\" />\r\n          </Tabs>\r\n        </Box>\r\n\r\n        {/* Таблица контента */}\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Заголовок</TableCell>\r\n                  <TableCell>Тип</TableCell>\r\n                  <TableCell>Статус</TableCell>\r\n                  <TableCell>Автор</TableCell>\r\n                  <TableCell>Дата создания</TableCell>\r\n                  <TableCell>Просмотры</TableCell>\r\n                  <TableCell align=\"center\">Действия</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {getFilteredContents().map((content) => (\r\n                  <TableRow key={content.id} hover>\r\n                    <TableCell>\r\n                      <Typography variant=\"subtitle2\" fontWeight=\"medium\">\r\n                        {content.title}\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Chip \r\n                        label={getTypeText(content.type)} \r\n                        size=\"small\" \r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Chip \r\n                        label={getStatusText(content.status)} \r\n                        size=\"small\" \r\n                        color={getStatusColor(content.status) as any}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{content.author}</TableCell>\r\n                    <TableCell>{content.createdAt}</TableCell>\r\n                    <TableCell>{content.views}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        onClick={() => handleStatusToggle(content)}\r\n                        title={content.status === 'published' ? 'Скрыть' : 'Опубликовать'}\r\n                      >\r\n                        {content.status === 'published' ? <VisibilityOff /> : <Visibility />}\r\n                      </IconButton>\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        onClick={() => handleEdit(content)}\r\n                        title=\"Редактировать\"\r\n                      >\r\n                        <Edit />\r\n                      </IconButton>\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        onClick={() => handleDelete(content)}\r\n                        title=\"Удалить\"\r\n                        color=\"error\"\r\n                      >\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n\r\n        {/* Кнопка добавления */}\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          sx={{ position: 'fixed', bottom: 24, right: 24 }}\r\n          onClick={() => {\r\n            setSelectedContent(null);\r\n            setFormData({ title: '', type: 'article', status: 'draft', content: '' });\r\n            setIsEditDialogOpen(true);\r\n          }}\r\n        >\r\n          <Add />\r\n        </Fab>\r\n\r\n        {/* Диалог редактирования */}\r\n        <Dialog open={isEditDialogOpen} onClose={() => setIsEditDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>\r\n            {selectedContent ? 'Редактировать материал' : 'Создать новый материал'}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <Box sx={{ pt: 2 }}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Заголовок\"\r\n                value={formData.title}\r\n                onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n                sx={{ mb: 3 }}\r\n              />\r\n              \r\n              <Grid container spacing={3} sx={{ mb: 3 }}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>Тип</InputLabel>\r\n                    <Select\r\n                      value={formData.type}\r\n                      label=\"Тип\"\r\n                      onChange={(e) => setFormData({ ...formData, type: e.target.value as any })}\r\n                    >\r\n                      <MenuItem value=\"article\">Статья</MenuItem>\r\n                      <MenuItem value=\"news\">Новость</MenuItem>\r\n                      <MenuItem value=\"page\">Страница</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>Статус</InputLabel>\r\n                    <Select\r\n                      value={formData.status}\r\n                      label=\"Статус\"\r\n                      onChange={(e) => setFormData({ ...formData, status: e.target.value as any })}\r\n                    >\r\n                      <MenuItem value=\"draft\">Черновик</MenuItem>\r\n                      <MenuItem value=\"published\">Опубликовано</MenuItem>\r\n                      <MenuItem value=\"archived\">Архив</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Содержание\"\r\n                multiline\r\n                rows={8}\r\n                value={formData.content}\r\n                onChange={(e) => setFormData({ ...formData, content: e.target.value })}\r\n                placeholder=\"Введите содержание материала...\"\r\n              />\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setIsEditDialogOpen(false)} startIcon={<Cancel />}>\r\n              Отмена\r\n            </Button>\r\n            <Button onClick={handleSave} variant=\"contained\" startIcon={<Save />}>\r\n              Сохранить\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Диалог удаления */}\r\n        <Dialog open={isDeleteDialogOpen} onClose={() => setIsDeleteDialogOpen(false)}>\r\n          <DialogTitle>Подтверждение удаления</DialogTitle>\r\n          <DialogContent>\r\n            <Alert severity=\"warning\" sx={{ mb: 2 }}>\r\n              Это действие нельзя отменить!\r\n            </Alert>\r\n            <Typography>\r\n              Вы уверены, что хотите удалить материал \"{selectedContent?.title}\"?\r\n            </Typography>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setIsDeleteDialogOpen(false)}>\r\n              Отмена\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\" variant=\"contained\">\r\n              Удалить\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContentManagement; "],"names":["ContentManagement","navigate","useNavigate","tabValue","setTabValue","useState","contents","setContents","selectedContent","setSelectedContent","isEditDialogOpen","setIsEditDialogOpen","isDeleteDialogOpen","setIsDeleteDialogOpen","formData","setFormData","useEffect","handleTabChange","event","newValue","getFilteredContents","c","getStatusColor","status","getStatusText","getTypeText","type","handleEdit","content","handleDelete","handleSave","updatedContents","handleDeleteConfirm","handleStatusToggle","newStatus","stats","sum","jsxs","Fragment","Helmet","jsx","Container","Box","Button","ArrowBack","Article","Typography","Grid","Card","CardContent","Tabs","Tab","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Chip","IconButton","VisibilityOff","Visibility","Edit","Delete","Fab","Add","Dialog","DialogTitle","DialogContent","TextField","e","FormControl","InputLabel","Select","MenuItem","DialogActions","Cancel","Save","Alert"],"mappings":"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"}