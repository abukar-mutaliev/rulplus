{"version":3,"file":"index-75ed3a9d.js","sources":["../../src/pages/AdminPanel/ServicesManagement/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Chip,\r\n  IconButton,\r\n  Alert,\r\n  Snackbar,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  Fab\r\n} from '@mui/material';\r\nimport {\r\n  ArrowBack,\r\n  Add,\r\n  Edit,\r\n  Delete,\r\n  ExpandMore,\r\n  AttachMoney,\r\n  Schedule,\r\n  Payment,\r\n  Description,\r\n  School\r\n} from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { servicesApi, IMainService, IAdditionalService, IPaymentMethod, IPaymentSchedule, IDiscount, IContractInfo } from '../../../shared/api/servicesApi';\r\n\r\nconst ServicesManagement = () => {\r\n  const navigate = useNavigate();\r\n  const [servicesData, setServicesData] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' as any });\r\n\r\n  // Состояния для диалогов\r\n  const [mainServiceDialog, setMainServiceDialog] = useState({ open: false, editing: null as IMainService | null });\r\n  const [additionalServiceDialog, setAdditionalServiceDialog] = useState({ open: false, editing: null as IAdditionalService | null });\r\n  const [paymentMethodsDialog, setPaymentMethodsDialog] = useState({ open: false });\r\n  const [paymentScheduleDialog, setPaymentScheduleDialog] = useState({ open: false });\r\n  const [discountsDialog, setDiscountsDialog] = useState({ open: false });\r\n  const [contractInfoDialog, setContractInfoDialog] = useState({ open: false });\r\n\r\n  // Формы\r\n  const [mainServiceForm, setMainServiceForm] = useState({\r\n    category: '',\r\n    name: '',\r\n    description: '',\r\n    duration: '',\r\n    cost: '',\r\n    includes: [''],\r\n    additionalCosts: [{ service: '', cost: '', note: '' }]\r\n  });\r\n\r\n  const [additionalServiceForm, setAdditionalServiceForm] = useState({\r\n    name: '',\r\n    description: '',\r\n    cost: '',\r\n    unit: '',\r\n    note: ''\r\n  });\r\n\r\n  const [paymentMethodsForm, setPaymentMethodsForm] = useState<IPaymentMethod[]>([]);\r\n  const [paymentScheduleForm, setPaymentScheduleForm] = useState<IPaymentSchedule[]>([]);\r\n  const [discountsForm, setDiscountsForm] = useState<IDiscount[]>([]);\r\n  const [contractInfoForm, setContractInfoForm] = useState<IContractInfo>({\r\n    templateUrl: '',\r\n    requiredDocuments: ['']\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadServices();\r\n  }, []);\r\n\r\n  const loadServices = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await servicesApi.getServices();\r\n      setServicesData(data);\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке услуг:', error);\r\n      setSnackbar({ open: true, message: 'Ошибка при загрузке услуг', severity: 'error' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMainServiceSave = async () => {\r\n    try {\r\n      setSaving(true);\r\n      if (mainServiceDialog.editing) {\r\n        await servicesApi.updateMainService(mainServiceDialog.editing.id, mainServiceForm);\r\n      } else {\r\n        await servicesApi.createMainService(mainServiceForm);\r\n      }\r\n      setSnackbar({ open: true, message: 'Услуга сохранена', severity: 'success' });\r\n      setMainServiceDialog({ open: false, editing: null });\r\n      loadServices();\r\n    } catch (error) {\r\n      console.error('Ошибка при сохранении услуги:', error);\r\n      setSnackbar({ open: true, message: 'Ошибка при сохранении услуги', severity: 'error' });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleAdditionalServiceSave = async () => {\r\n    try {\r\n      setSaving(true);\r\n      if (additionalServiceDialog.editing) {\r\n        await servicesApi.updateAdditionalService(additionalServiceDialog.editing.id, additionalServiceForm);\r\n      } else {\r\n        await servicesApi.createAdditionalService(additionalServiceForm);\r\n      }\r\n      setSnackbar({ open: true, message: 'Дополнительная услуга сохранена', severity: 'success' });\r\n      setAdditionalServiceDialog({ open: false, editing: null });\r\n      loadServices();\r\n    } catch (error) {\r\n      console.error('Ошибка при сохранении дополнительной услуги:', error);\r\n      setSnackbar({ open: true, message: 'Ошибка при сохранении дополнительной услуги', severity: 'error' });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteMainService = async (id: number) => {\r\n    try {\r\n      await servicesApi.deleteMainService(id);\r\n      setSnackbar({ open: true, message: 'Услуга удалена', severity: 'success' });\r\n      loadServices();\r\n    } catch (error) {\r\n      console.error('Ошибка при удалении услуги:', error);\r\n      setSnackbar({ open: true, message: 'Ошибка при удалении услуги', severity: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleDeleteAdditionalService = async (id: number) => {\r\n    try {\r\n      await servicesApi.deleteAdditionalService(id);\r\n      setSnackbar({ open: true, message: 'Дополнительная услуга удалена', severity: 'success' });\r\n      loadServices();\r\n    } catch (error) {\r\n      console.error('Ошибка при удалении дополнительной услуги:', error);\r\n      setSnackbar({ open: true, message: 'Ошибка при удалении дополнительной услуги', severity: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleEditMainService = (service: IMainService) => {\r\n    setMainServiceForm({\r\n      category: service.category,\r\n      name: service.name,\r\n      description: service.description,\r\n      duration: service.duration,\r\n      cost: service.cost.toString(),\r\n      includes: service.includes,\r\n      additionalCosts: service.additionalCosts\r\n    });\r\n    setMainServiceDialog({ open: true, editing: service });\r\n  };\r\n\r\n  const handleEditAdditionalService = (service: IAdditionalService) => {\r\n    setAdditionalServiceForm({\r\n      name: service.name,\r\n      description: service.description,\r\n      cost: service.cost.toString(),\r\n      unit: service.unit,\r\n      note: service.note\r\n    });\r\n    setAdditionalServiceDialog({ open: true, editing: service });\r\n  };\r\n\r\n  const handleAddMainService = () => {\r\n    setMainServiceForm({\r\n      category: '',\r\n      name: '',\r\n      description: '',\r\n      duration: '',\r\n      cost: '',\r\n      includes: [''],\r\n      additionalCosts: [{ service: '', cost: '', note: '' }]\r\n    });\r\n    setMainServiceDialog({ open: true, editing: null });\r\n  };\r\n\r\n  const handleAddAdditionalService = () => {\r\n    setAdditionalServiceForm({\r\n      name: '',\r\n      description: '',\r\n      cost: '',\r\n      unit: '',\r\n      note: ''\r\n    });\r\n    setAdditionalServiceDialog({ open: true, editing: null });\r\n  };\r\n\r\n  const handlePaymentMethodsSave = async () => {\r\n    try {\r\n      setSaving(true);\r\n      await servicesApi.updatePaymentMethods(paymentMethodsForm);\r\n      setSnackbar({ open: true, message: 'Способы оплаты обновлены', severity: 'success' });\r\n      setPaymentMethodsDialog({ open: false });\r\n      loadServices();\r\n    } catch (error) {\r\n      console.error('Ошибка при сохранении способов оплаты:', error);\r\n      setSnackbar({ open: true, message: 'Ошибка при сохранении способов оплаты', severity: 'error' });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handlePaymentScheduleSave = async () => {\r\n    try {\r\n      setSaving(true);\r\n      await servicesApi.updatePaymentSchedule(paymentScheduleForm);\r\n      setSnackbar({ open: true, message: 'График оплаты обновлен', severity: 'success' });\r\n      setPaymentScheduleDialog({ open: false });\r\n      loadServices();\r\n    } catch (error) {\r\n      console.error('Ошибка при сохранении графика оплаты:', error);\r\n      setSnackbar({ open: true, message: 'Ошибка при сохранении графика оплаты', severity: 'error' });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleDiscountsSave = async () => {\r\n    try {\r\n      setSaving(true);\r\n      await servicesApi.updateDiscounts(discountsForm);\r\n      setSnackbar({ open: true, message: 'Скидки обновлены', severity: 'success' });\r\n      setDiscountsDialog({ open: false });\r\n      loadServices();\r\n    } catch (error) {\r\n      console.error('Ошибка при сохранении скидок:', error);\r\n      setSnackbar({ open: true, message: 'Ошибка при сохранении скидок', severity: 'error' });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleContractInfoSave = async () => {\r\n    try {\r\n      setSaving(true);\r\n      await servicesApi.updateContractInfo(contractInfoForm);\r\n      setSnackbar({ open: true, message: 'Информация о договоре обновлена', severity: 'success' });\r\n      setContractInfoDialog({ open: false });\r\n      loadServices();\r\n    } catch (error) {\r\n      console.error('Ошибка при сохранении информации о договоре:', error);\r\n      setSnackbar({ open: true, message: 'Ошибка при сохранении информации о договоре', severity: 'error' });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n        <Typography>Загрузка...</Typography>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n      {/* Заголовок */}\r\n      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 4 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Button\r\n            startIcon={<ArrowBack />}\r\n            onClick={() => navigate('/admin')}\r\n            sx={{ mr: 2 }}\r\n          >\r\n            Назад\r\n          </Button>\r\n          <School sx={{ mr: 2, fontSize: 32, color: 'primary.main' }} />\r\n          <Box>\r\n            <Typography variant=\"h4\" component=\"h1\" fontWeight=\"bold\">\r\n              Управление услугами\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\">\r\n              Управление платными образовательными услугами\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<Add />}\r\n          onClick={handleAddMainService}\r\n        >\r\n          Добавить услугу\r\n        </Button>\r\n      </Box>\r\n\r\n      {servicesData && (\r\n        <>\r\n          {/* Основные услуги */}\r\n          <Accordion defaultExpanded>\r\n            <AccordionSummary expandIcon={<ExpandMore />}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n                <AttachMoney sx={{ mr: 2, color: 'primary.main' }} />\r\n                <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n                  Основные услуги\r\n                </Typography>\r\n                <Chip \r\n                  label={servicesData.mainServices.length} \r\n                  size=\"small\" \r\n                  color=\"primary\"\r\n                  sx={{ mr: 2 }}\r\n                />\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  startIcon={<Add />}\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    handleAddMainService();\r\n                  }}\r\n                >\r\n                  Добавить\r\n                </Button>\r\n              </Box>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {servicesData.mainServices.length > 0 ? (\r\n                <TableContainer component={Paper} variant=\"outlined\">\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Категория</TableCell>\r\n                        <TableCell>Название</TableCell>\r\n                        <TableCell>Продолжительность</TableCell>\r\n                        <TableCell>Стоимость</TableCell>\r\n                        <TableCell align=\"center\">Действия</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {servicesData.mainServices.map((service: IMainService) => (\r\n                        <TableRow key={service.id}>\r\n                          <TableCell>\r\n                            <Chip label={service.category} size=\"small\" color=\"primary\" />\r\n                          </TableCell>\r\n                          <TableCell>{service.name}</TableCell>\r\n                          <TableCell>{service.duration}</TableCell>\r\n                          <TableCell>{service.cost.toLocaleString('ru-RU')} ₽</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              color=\"primary\"\r\n                              onClick={() => handleEditMainService(service)}\r\n                            >\r\n                              <Edit />\r\n                            </IconButton>\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              color=\"error\"\r\n                              onClick={() => handleDeleteMainService(service.id)}\r\n                            >\r\n                              <Delete />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              ) : (\r\n                <Alert severity=\"info\">\r\n                  Основные услуги отсутствуют\r\n                </Alert>\r\n              )}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          {/* Дополнительные услуги */}\r\n          <Accordion>\r\n            <AccordionSummary expandIcon={<ExpandMore />}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n                <Schedule sx={{ mr: 2, color: 'info.main' }} />\r\n                <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n                  Дополнительные услуги\r\n                </Typography>\r\n                <Chip \r\n                  label={servicesData.additionalServices.length} \r\n                  size=\"small\" \r\n                  color=\"info\"\r\n                  sx={{ mr: 2 }}\r\n                />\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  startIcon={<Add />}\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    handleAddAdditionalService();\r\n                  }}\r\n                >\r\n                  Добавить\r\n                </Button>\r\n              </Box>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {servicesData.additionalServices.length > 0 ? (\r\n                <TableContainer component={Paper} variant=\"outlined\">\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Название</TableCell>\r\n                        <TableCell>Описание</TableCell>\r\n                        <TableCell>Стоимость</TableCell>\r\n                        <TableCell>Единица</TableCell>\r\n                        <TableCell align=\"center\">Действия</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {servicesData.additionalServices.map((service: IAdditionalService) => (\r\n                        <TableRow key={service.id}>\r\n                          <TableCell>{service.name}</TableCell>\r\n                          <TableCell>{service.description}</TableCell>\r\n                          <TableCell>{service.cost.toLocaleString('ru-RU')} ₽</TableCell>\r\n                          <TableCell>{service.unit}</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              color=\"primary\"\r\n                              onClick={() => handleEditAdditionalService(service)}\r\n                            >\r\n                              <Edit />\r\n                            </IconButton>\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              color=\"error\"\r\n                              onClick={() => handleDeleteAdditionalService(service.id)}\r\n                            >\r\n                              <Delete />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              ) : (\r\n                <Alert severity=\"info\">\r\n                  Дополнительные услуги отсутствуют\r\n                </Alert>\r\n              )}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          {/* Условия оплаты */}\r\n          <Accordion>\r\n            <AccordionSummary expandIcon={<ExpandMore />}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n                <Payment sx={{ mr: 2, color: 'success.main' }} />\r\n                <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n                  Условия оплаты\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', gap: 1 }}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      setPaymentMethodsForm(servicesData.paymentTerms.methods);\r\n                      setPaymentMethodsDialog({ open: true });\r\n                    }}\r\n                  >\r\n                    Способы оплаты\r\n                  </Button>\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      setPaymentScheduleForm(servicesData.paymentTerms.schedule);\r\n                      setPaymentScheduleDialog({ open: true });\r\n                    }}\r\n                  >\r\n                    График оплаты\r\n                  </Button>\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      setDiscountsForm(servicesData.paymentTerms.discounts);\r\n                      setDiscountsDialog({ open: true });\r\n                    }}\r\n                  >\r\n                    Скидки\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} md={4}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Способы оплаты:\r\n                  </Typography>\r\n                  <List dense>\r\n                    {servicesData.paymentTerms.methods.map((method: IPaymentMethod, index: number) => (\r\n                      <ListItem key={method.id || index}>\r\n                        <ListItemText primary={`• ${method.method}`} />\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    График оплаты:\r\n                  </Typography>\r\n                  <List dense>\r\n                    {servicesData.paymentTerms.schedule.map((payment: IPaymentSchedule, index: number) => (\r\n                      <ListItem key={payment.id || index}>\r\n                        <ListItemText \r\n                          primary={`${payment.amount} — ${payment.stage}`}\r\n                          secondary={payment.note}\r\n                        />\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Скидки:\r\n                  </Typography>\r\n                  <List dense>\r\n                    {servicesData.paymentTerms.discounts.map((discount: IDiscount, index: number) => (\r\n                      <ListItem key={discount.id || index}>\r\n                        <ListItemText \r\n                          primary={`${discount.discount} — ${discount.category}`}\r\n                          secondary={discount.note}\r\n                        />\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          {/* Информация о договоре */}\r\n          <Accordion>\r\n            <AccordionSummary expandIcon={<ExpandMore />}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n                <Description sx={{ mr: 2, color: 'warning.main' }} />\r\n                <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n                  Информация о договоре\r\n                </Typography>\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setContractInfoForm(servicesData.contractInfo);\r\n                    setContractInfoDialog({ open: true });\r\n                  }}\r\n                >\r\n                  Редактировать\r\n                </Button>\r\n              </Box>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Необходимые документы:\r\n                  </Typography>\r\n                  <List dense>\r\n                    {servicesData.contractInfo.requiredDocuments.map((doc: string, index: number) => (\r\n                      <ListItem key={index}>\r\n                        <ListItemText primary={`• ${doc}`} />\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Образец договора:\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n                    URL шаблона: {servicesData.contractInfo.templateUrl}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </>\r\n      )}\r\n\r\n      {/* Диалог основной услуги */}\r\n      <Dialog \r\n        open={mainServiceDialog.open} \r\n        onClose={() => setMainServiceDialog({ open: false, editing: null })}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          {mainServiceDialog.editing ? 'Редактировать услугу' : 'Добавить услугу'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2} sx={{ mt: 1 }}>\r\n            <Grid item xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Категория</InputLabel>\r\n                <Select\r\n                  value={mainServiceForm.category}\r\n                  onChange={(e) => setMainServiceForm({ ...mainServiceForm, category: e.target.value })}\r\n                >\r\n                  <MenuItem value=\"A\">A</MenuItem>\r\n                  <MenuItem value=\"B\">B</MenuItem>\r\n                  <MenuItem value=\"C\">C</MenuItem>\r\n                  <MenuItem value=\"D\">D</MenuItem>\r\n                  <MenuItem value=\"E\">E</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Стоимость\"\r\n                type=\"number\"\r\n                value={mainServiceForm.cost}\r\n                onChange={(e) => setMainServiceForm({ ...mainServiceForm, cost: e.target.value })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Название услуги\"\r\n                value={mainServiceForm.name}\r\n                onChange={(e) => setMainServiceForm({ ...mainServiceForm, name: e.target.value })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Описание\"\r\n                multiline\r\n                rows={3}\r\n                value={mainServiceForm.description}\r\n                onChange={(e) => setMainServiceForm({ ...mainServiceForm, description: e.target.value })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Продолжительность\"\r\n                value={mainServiceForm.duration}\r\n                onChange={(e) => setMainServiceForm({ ...mainServiceForm, duration: e.target.value })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                В стоимость входит:\r\n              </Typography>\r\n              {mainServiceForm.includes.map((item, index) => (\r\n                <TextField\r\n                  key={index}\r\n                  fullWidth\r\n                  label={`Пункт ${index + 1}`}\r\n                  value={item}\r\n                  onChange={(e) => {\r\n                    const newIncludes = [...mainServiceForm.includes];\r\n                    newIncludes[index] = e.target.value;\r\n                    setMainServiceForm({ ...mainServiceForm, includes: newIncludes });\r\n                  }}\r\n                  sx={{ mb: 1 }}\r\n                />\r\n              ))}\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => setMainServiceForm({ \r\n                  ...mainServiceForm, \r\n                  includes: [...mainServiceForm.includes, ''] \r\n                })}\r\n              >\r\n                Добавить пункт\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Дополнительные расходы:\r\n              </Typography>\r\n              {mainServiceForm.additionalCosts.map((cost, index) => (\r\n                <Box key={index} sx={{ mb: 2, p: 2, border: '1px solid #ddd', borderRadius: 1 }}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={4}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Услуга\"\r\n                        value={cost.service}\r\n                        onChange={(e) => {\r\n                          const newCosts = [...mainServiceForm.additionalCosts];\r\n                          newCosts[index].service = e.target.value;\r\n                          setMainServiceForm({ ...mainServiceForm, additionalCosts: newCosts });\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Стоимость\"\r\n                        value={cost.cost}\r\n                        onChange={(e) => {\r\n                          const newCosts = [...mainServiceForm.additionalCosts];\r\n                          newCosts[index].cost = e.target.value;\r\n                          setMainServiceForm({ ...mainServiceForm, additionalCosts: newCosts });\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Примечание\"\r\n                        value={cost.note}\r\n                        onChange={(e) => {\r\n                          const newCosts = [...mainServiceForm.additionalCosts];\r\n                          newCosts[index].note = e.target.value;\r\n                          setMainServiceForm({ ...mainServiceForm, additionalCosts: newCosts });\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              ))}\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => setMainServiceForm({ \r\n                  ...mainServiceForm, \r\n                  additionalCosts: [...mainServiceForm.additionalCosts, { service: '', cost: '', note: '' }] \r\n                })}\r\n              >\r\n                Добавить расход\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n            onClick={() => setMainServiceDialog({ open: false, editing: null })}\r\n            disabled={saving}\r\n          >\r\n            Отмена\r\n          </Button>\r\n          <Button \r\n            onClick={handleMainServiceSave}\r\n            variant=\"contained\"\r\n            disabled={saving}\r\n          >\r\n            {saving ? 'Сохранение...' : 'Сохранить'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Диалог дополнительной услуги */}\r\n      <Dialog \r\n        open={additionalServiceDialog.open} \r\n        onClose={() => setAdditionalServiceDialog({ open: false, editing: null })}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          {additionalServiceDialog.editing ? 'Редактировать дополнительную услугу' : 'Добавить дополнительную услугу'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2} sx={{ mt: 1 }}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Название услуги\"\r\n                value={additionalServiceForm.name}\r\n                onChange={(e) => setAdditionalServiceForm({ ...additionalServiceForm, name: e.target.value })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Описание\"\r\n                multiline\r\n                rows={3}\r\n                value={additionalServiceForm.description}\r\n                onChange={(e) => setAdditionalServiceForm({ ...additionalServiceForm, description: e.target.value })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Стоимость\"\r\n                type=\"number\"\r\n                value={additionalServiceForm.cost}\r\n                onChange={(e) => setAdditionalServiceForm({ ...additionalServiceForm, cost: e.target.value })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Единица измерения\"\r\n                value={additionalServiceForm.unit}\r\n                onChange={(e) => setAdditionalServiceForm({ ...additionalServiceForm, unit: e.target.value })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Примечание\"\r\n                value={additionalServiceForm.note}\r\n                onChange={(e) => setAdditionalServiceForm({ ...additionalServiceForm, note: e.target.value })}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n            onClick={() => setAdditionalServiceDialog({ open: false, editing: null })}\r\n            disabled={saving}\r\n          >\r\n            Отмена\r\n          </Button>\r\n          <Button \r\n            onClick={handleAdditionalServiceSave}\r\n            variant=\"contained\"\r\n            disabled={saving}\r\n          >\r\n            {saving ? 'Сохранение...' : 'Сохранить'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Диалог способов оплаты */}\r\n      <Dialog \r\n        open={paymentMethodsDialog.open} \r\n        onClose={() => setPaymentMethodsDialog({ open: false })}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Редактировать способы оплаты</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n            Введите способы оплаты (каждый с новой строки):\r\n          </Typography>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            rows={6}\r\n            value={paymentMethodsForm.map(m => m.method).join('\\n')}\r\n            onChange={(e) => {\r\n              const methods = e.target.value.split('\\n').filter(m => m.trim() !== '').map((method, index) => ({\r\n                id: paymentMethodsForm[index]?.id || index,\r\n                method: method.trim()\r\n              }));\r\n              setPaymentMethodsForm(methods);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n            onClick={() => setPaymentMethodsDialog({ open: false })}\r\n            disabled={saving}\r\n          >\r\n            Отмена\r\n          </Button>\r\n          <Button \r\n            onClick={handlePaymentMethodsSave}\r\n            variant=\"contained\"\r\n            disabled={saving}\r\n          >\r\n            {saving ? 'Сохранение...' : 'Сохранить'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Диалог графика оплаты */}\r\n      <Dialog \r\n        open={paymentScheduleDialog.open} \r\n        onClose={() => setPaymentScheduleDialog({ open: false })}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Редактировать график оплаты</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n            Настройте этапы оплаты:\r\n          </Typography>\r\n          {paymentScheduleForm.map((payment, index) => (\r\n            <Box key={index} sx={{ mb: 2, p: 2, border: '1px solid #ddd', borderRadius: 1 }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} md={4}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Сумма\"\r\n                    value={payment.amount}\r\n                    onChange={(e) => {\r\n                      const newSchedule = [...paymentScheduleForm];\r\n                      newSchedule[index].amount = e.target.value;\r\n                      setPaymentScheduleForm(newSchedule);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Этап\"\r\n                    value={payment.stage}\r\n                    onChange={(e) => {\r\n                      const newSchedule = [...paymentScheduleForm];\r\n                      newSchedule[index].stage = e.target.value;\r\n                      setPaymentScheduleForm(newSchedule);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Примечание\"\r\n                    value={payment.note}\r\n                    onChange={(e) => {\r\n                      const newSchedule = [...paymentScheduleForm];\r\n                      newSchedule[index].note = e.target.value;\r\n                      setPaymentScheduleForm(newSchedule);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          ))}\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => setPaymentScheduleForm([...paymentScheduleForm, { id: Date.now(), amount: '', stage: '', note: '' }])}\r\n            sx={{ mt: 1 }}\r\n          >\r\n            Добавить этап\r\n          </Button>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n            onClick={() => setPaymentScheduleDialog({ open: false })}\r\n            disabled={saving}\r\n          >\r\n            Отмена\r\n          </Button>\r\n          <Button \r\n            onClick={handlePaymentScheduleSave}\r\n            variant=\"contained\"\r\n            disabled={saving}\r\n          >\r\n            {saving ? 'Сохранение...' : 'Сохранить'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Диалог скидок */}\r\n      <Dialog \r\n        open={discountsDialog.open} \r\n        onClose={() => setDiscountsDialog({ open: false })}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Редактировать скидки</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n            Настройте скидки для различных категорий:\r\n          </Typography>\r\n          {discountsForm.map((discount, index) => (\r\n            <Box key={index} sx={{ mb: 2, p: 2, border: '1px solid #ddd', borderRadius: 1 }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} md={4}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Размер скидки\"\r\n                    value={discount.discount}\r\n                    onChange={(e) => {\r\n                      const newDiscounts = [...discountsForm];\r\n                      newDiscounts[index].discount = e.target.value;\r\n                      setDiscountsForm(newDiscounts);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Категория\"\r\n                    value={discount.category}\r\n                    onChange={(e) => {\r\n                      const newDiscounts = [...discountsForm];\r\n                      newDiscounts[index].category = e.target.value;\r\n                      setDiscountsForm(newDiscounts);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Примечание\"\r\n                    value={discount.note}\r\n                    onChange={(e) => {\r\n                      const newDiscounts = [...discountsForm];\r\n                      newDiscounts[index].note = e.target.value;\r\n                      setDiscountsForm(newDiscounts);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          ))}\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => setDiscountsForm([...discountsForm, { id: Date.now(), discount: '', category: '', note: '' }])}\r\n            sx={{ mt: 1 }}\r\n          >\r\n            Добавить скидку\r\n          </Button>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n            onClick={() => setDiscountsDialog({ open: false })}\r\n            disabled={saving}\r\n          >\r\n            Отмена\r\n          </Button>\r\n          <Button \r\n            onClick={handleDiscountsSave}\r\n            variant=\"contained\"\r\n            disabled={saving}\r\n          >\r\n            {saving ? 'Сохранение...' : 'Сохранить'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Диалог информации о договоре */}\r\n      <Dialog \r\n        open={contractInfoDialog.open} \r\n        onClose={() => setContractInfoDialog({ open: false })}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Редактировать информацию о договоре</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2} sx={{ mt: 1 }}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"URL шаблона договора\"\r\n                value={contractInfoForm.templateUrl}\r\n                onChange={(e) => setContractInfoForm({ ...contractInfoForm, templateUrl: e.target.value })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Необходимые документы:\r\n              </Typography>\r\n              {contractInfoForm.requiredDocuments.map((doc, index) => (\r\n                <TextField\r\n                  key={index}\r\n                  fullWidth\r\n                  label={`Документ ${index + 1}`}\r\n                  value={doc}\r\n                  onChange={(e) => {\r\n                    const newDocs = [...contractInfoForm.requiredDocuments];\r\n                    newDocs[index] = e.target.value;\r\n                    setContractInfoForm({ ...contractInfoForm, requiredDocuments: newDocs });\r\n                  }}\r\n                  sx={{ mb: 1 }}\r\n                />\r\n              ))}\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => setContractInfoForm({ \r\n                  ...contractInfoForm, \r\n                  requiredDocuments: [...contractInfoForm.requiredDocuments, ''] \r\n                })}\r\n              >\r\n                Добавить документ\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n            onClick={() => setContractInfoDialog({ open: false })}\r\n            disabled={saving}\r\n          >\r\n            Отмена\r\n          </Button>\r\n          <Button \r\n            onClick={handleContractInfoSave}\r\n            variant=\"contained\"\r\n            disabled={saving}\r\n          >\r\n            {saving ? 'Сохранение...' : 'Сохранить'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Snackbar для уведомлений */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n      >\r\n        <Alert severity={snackbar.severity} onClose={() => setSnackbar({ ...snackbar, open: false })}>\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ServicesManagement; "],"names":["ServicesManagement","navigate","useNavigate","servicesData","setServicesData","useState","loading","setLoading","saving","setSaving","snackbar","setSnackbar","mainServiceDialog","setMainServiceDialog","additionalServiceDialog","setAdditionalServiceDialog","paymentMethodsDialog","setPaymentMethodsDialog","paymentScheduleDialog","setPaymentScheduleDialog","discountsDialog","setDiscountsDialog","contractInfoDialog","setContractInfoDialog","mainServiceForm","setMainServiceForm","additionalServiceForm","setAdditionalServiceForm","paymentMethodsForm","setPaymentMethodsForm","paymentScheduleForm","setPaymentScheduleForm","discountsForm","setDiscountsForm","contractInfoForm","setContractInfoForm","useEffect","loadServices","data","servicesApi","error","handleMainServiceSave","handleAdditionalServiceSave","handleDeleteMainService","id","handleDeleteAdditionalService","handleEditMainService","service","handleEditAdditionalService","handleAddMainService","handleAddAdditionalService","handlePaymentMethodsSave","handlePaymentScheduleSave","handleDiscountsSave","handleContractInfoSave","jsx","Container","Typography","jsxs","Box","Button","ArrowBack","School","Add","Fragment","Accordion","AccordionSummary","ExpandMore","AttachMoney","Chip","e","AccordionDetails","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","IconButton","Edit","Delete","Alert","Schedule","Payment","Grid","List","method","index","ListItem","ListItemText","payment","discount","Description","doc","Dialog","DialogTitle","DialogContent","FormControl","InputLabel","Select","MenuItem","TextField","item","newIncludes","cost","newCosts","DialogActions","m","methods","newSchedule","newDiscounts","newDocs","Snackbar"],"mappings":"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"}