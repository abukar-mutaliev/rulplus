const s="http://localhost:5000/api",a={getDocuments:async()=>{try{const r=await fetch(`${s}/documents`);if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return await r.json()}catch(r){throw console.error("Ошибка при загрузке документов:",r),r}},createDocument:async r=>{try{const t=new FormData;t.append("title",r.title),t.append("description",r.description),t.append("category",r.category),r.status&&t.append("status",r.status),r.expiryDate&&t.append("expiryDate",r.expiryDate),r.file&&t.append("file",r.file);const e=await fetch(`${s}/documents`,{method:"POST",body:t});if(!e.ok){const o=await e.json();throw new Error(o.message||`HTTP error! status: ${e.status}`)}return await e.json()}catch(t){throw console.error("Ошибка при создании документа:",t),t}},updateDocument:async(r,t)=>{try{const e=new FormData;t.title&&e.append("title",t.title),t.description&&e.append("description",t.description),t.category&&e.append("category",t.category),t.status&&e.append("status",t.status),t.expiryDate!==void 0&&e.append("expiryDate",t.expiryDate),t.file&&e.append("file",t.file);const o=await fetch(`${s}/documents/${r}`,{method:"PUT",body:e});if(!o.ok){const n=await o.json();throw new Error(n.message||`HTTP error! status: ${o.status}`)}return await o.json()}catch(e){throw console.error("Ошибка при обновлении документа:",e),e}},deleteDocument:async r=>{try{const t=await fetch(`${s}/documents/${r}`,{method:"DELETE"});if(!t.ok){const e=await t.json();throw new Error(e.message||`HTTP error! status: ${t.status}`)}return await t.json()}catch(t){throw console.error("Ошибка при удалении документа:",t),t}},downloadDocument:(r,t)=>{const e=document.createElement("a"),o=r.startsWith("http")?r:`http://localhost:5000${r}`;e.href=o,e.download=t,document.body.appendChild(e),e.click(),document.body.removeChild(e)},viewDocument:r=>{const t=r.startsWith("http")?r:`http://localhost:5000${r}`;window.open(t,"_blank")}};export{a as d};
//# sourceMappingURL=documentsApi-b895ecfe.js.map
