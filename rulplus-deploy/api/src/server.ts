import express from 'express';
import cors from 'cors';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

const app = express();

// –ë–∞–∑–æ–≤—ã–µ middleware
app.use(cors({
  origin: ['http://localhost:3000', 'http://localhost:3007', 'http://localhost:3008', 'http://localhost:3009', 'http://localhost:3010', 'http://localhost:3011', 'http://localhost:3012'],
  credentials: true
}));

app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use('/uploads', express.static('uploads'));

// Health check
app.get('/health', (req, res) => {
  res.status(200).json({
    status: 'ok',
    timestamp: new Date().toISOString(),
    uptime: process.uptime(),
    environment: process.env.NODE_ENV || 'development',
  });
});

// –ë–∞–∑–æ–≤—ã–π API endpoint
app.get('/api', (req, res) => {
  res.status(200).json({
    message: 'Driving School API',
    version: '1.0.0',
    status: 'running',
    endpoints: {
      health: '/health',
      api: '/api',
    },
  });
});

// –í—Ä–µ–º–µ–Ω–Ω—ã–π endpoint –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–≤–µ–¥–µ–Ω–∏–π
app.get('/api/info/basic', (req, res) => {
  res.status(200).json({
    status: 'success',
    data: {
      fullName: '–û–±—â–µ—Å—Ç–≤–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é "–ê–≤—Ç–æ—à–∫–æ–ª–∞ –†—É–ª—å+"',
      shortName: '–û–û–û "–ê–≤—Ç–æ—à–∫–æ–ª–∞ –†—É–ª—å+"',
      foundedDate: '1 –∞–≤–≥—É—Å—Ç–∞ 2025 –≥–æ–¥–∞',
      legalAddress: '–≥. –ù–∞–∑—Ä–∞–Ω—å, –ø—Ä-—Ç. –ò. –ë–∞–∑–æ—Ä–∫–∏–Ω–∞, –¥. 28 –í',
      actualAddress: '–≥. –ù–∞–∑—Ä–∞–Ω—å, –ø—Ä-—Ç. –ò. –ë–∞–∑–æ—Ä–∫–∏–Ω–∞, –¥. 28 –í',
      phone: '+7 (988) 822-28-88',
      email: 'rulplus@mail.ru',
      website: 'https://driving-school.ru',
      workSchedule: {
        weekdays: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞: 09:00 - 18:00',
        saturday: '–°—É–±–±–æ—Ç–∞: 10:00 - 16:00',
        sunday: '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: –≤—ã—Ö–æ–¥–Ω–æ–π',
        holidays: '–í –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –¥–Ω–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ–º—É –≥—Ä–∞—Ñ–∏–∫—É'
      },
      lastUpdated: new Date().toISOString()
    }
  });
});

// 404 handler
app.use((req, res) => {
  res.status(404).json({
    status: 'error',
    message: `–ú–∞—Ä—à—Ä—É—Ç ${req.originalUrl} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ`,
    code: 'ROUTE_NOT_FOUND',
  });
});

// Error handler
app.use((error: any, req: express.Request, res: express.Response, next: express.NextFunction) => {
  console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
  
  res.status(error.statusCode || 500).json({
    status: 'error',
    message: process.env.NODE_ENV === 'production' 
      ? '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' 
      : error.message,
    ...(process.env.NODE_ENV !== 'production' && { stack: error.stack })
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 5000;

const server = app.listen(PORT, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üåç –†–µ–∂–∏–º: ${process.env.NODE_ENV || 'development'}`);
  console.log(`üîó API endpoints:`);
  console.log(`   - Health check: http://localhost:${PORT}/health`);
  console.log(`   - Basic info: http://localhost:${PORT}/api/info/basic`);
  console.log(`   - Main API: http://localhost:${PORT}/api`);
});

// Graceful shutdown
process.on('SIGTERM', () => {
  console.log('SIGTERM —Å–∏–≥–Ω–∞–ª –ø–æ–ª—É—á–µ–Ω');
  server.close(() => {
    console.log('–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω');
    process.exit(0);
  });
});

process.on('SIGINT', () => {
  console.log('SIGINT —Å–∏–≥–Ω–∞–ª –ø–æ–ª—É—á–µ–Ω');
  server.close(() => {
    console.log('–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω');
    process.exit(0);
  });
});

export default app; 