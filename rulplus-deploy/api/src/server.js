import express from 'express';
import cors from 'cors';
import dotenv from 'dotenv';
import multer from 'multer';
import path from 'path';
import fs from 'fs';

// –ò–º–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤
import adminStatsRoutes from './routes/admin/adminStats.routes.js';
import applicationRoutes from './routes/application.routes.js';

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
console.log('üîß Server startup - Environment variables:');
console.log('EMAIL_USER:', process.env.EMAIL_USER);
console.log('EMAIL_PASS:', process.env.EMAIL_PASS ? '***SET***' : 'NOT SET');
console.log('PORT:', process.env.PORT);
console.log('NODE_ENV:', process.env.NODE_ENV);

const app = express();

// –ë–∞–∑–æ–≤—ã–µ middleware
app.use(cors({
  origin: ['http://localhost:3000', 'http://localhost:3007', 'http://localhost:3008', 'http://localhost:3009', 'http://localhost:3010', 'http://localhost:3011', 'http://localhost:3012', 'http://localhost:3013', 'http://localhost:3014', 'http://localhost:3015'],
  credentials: true
}));

app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
const documentsDir = path.join(process.cwd(), 'uploads', 'documents');
if (!fs.existsSync(documentsDir)) {
  fs.mkdirSync(documentsDir, { recursive: true });
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, documentsDir);
  },
  filename: (req, file, cb) => {
    // –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    const timestamp = Date.now();
    const ext = path.extname(file.originalname);
    const name = path.basename(file.originalname, ext)
      .replace(/[^a-zA-Z0-9–∞-—è–ê-–Ø]/g, '_') // –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è
      .replace(/_+/g, '_') // –ó–∞–º–µ–Ω—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –Ω–∞ –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ
      .replace(/^_|_$/g, ''); // –£–±–∏—Ä–∞–µ–º –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ
    const safeFileName = `${name}_${timestamp}${ext}`;
    cb(null, safeFileName);
  }
});

const upload = multer({
  storage: storage,
  limits: {
    fileSize: 10 * 1024 * 1024, // 10MB –º–∞–∫—Å–∏–º—É–º
  },
  fileFilter: (req, file, cb) => {
    // –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤
    const allowedTypes = ['.pdf', '.doc', '.docx', '.txt'];
    const ext = path.extname(file.originalname).toLowerCase();
    
    if (allowedTypes.includes(ext)) {
      cb(null, true);
    } else {
      cb(new Error('–†–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã PDF, DOC, DOCX, TXT'));
    }
  }
});

// –ü—Ä–æ—Å—Ç–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –ø–∞–º—è—Ç–∏ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
let documentsStore = {
  charter: [],
  license: [],
  accreditation: [
    {
      id: 1000000, // –ë–æ–ª—å—à–æ–π ID —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏
      title: '–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏',
      description: '–î–ª—è –ø—Ä–æ–≥—Ä–∞–º–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–∞',
      uploadDate: '2024-01-01',
      lastUpdate: '2024-01-01',
      status: 'not_required'
    }
  ],
  regulations: [],
  reports: [],
  collective: [],
  prescriptions: []
};

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —É—Å–ª—É–≥ –≤ –ø–∞–º—è—Ç–∏
let servicesStore = {
  mainServices: [
    {
      id: 1,
      category: 'B',
      name: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤–æ–¥–∏—Ç–µ–ª–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "B"',
      description: '–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –æ–±—É—á–µ–Ω–∏—è –≤–æ–∂–¥–µ–Ω–∏—é –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è',
      duration: '2-3 –º–µ—Å—è—Ü–∞',
      cost: 35000,
      includes: [
        '–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–Ω—è—Ç–∏—è (130 –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏—Ö —á–∞—Å–æ–≤)',
        '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–Ω—è—Ç–∏—è (56 –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏—Ö —á–∞—Å–æ–≤)',
        '–£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
        '–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —ç–∫–∑–∞–º–µ–Ω',
        '–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ —Å–¥–∞—á–µ —ç–∫–∑–∞–º–µ–Ω–∞ –≤ –ì–ò–ë–î–î'
      ],
      additionalCosts: [
        { service: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞', cost: '–æ—Ç 2000', note: '–æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ' },
        { service: '–ì–æ—Å–ø–æ—à–ª–∏–Ω–∞ –ì–ò–ë–î–î', cost: '2000', note: '–æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ' }
      ]
    },
    {
      id: 2,
      category: 'A',
      name: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤–æ–¥–∏—Ç–µ–ª–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "A"',
      description: '–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –æ–±—É—á–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –º–æ—Ç–æ—Ü–∏–∫–ª–æ–º',
      duration: '1.5-2 –º–µ—Å—è—Ü–∞',
      cost: 25000,
      includes: [
        '–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–Ω—è—Ç–∏—è (108 –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏—Ö —á–∞—Å–æ–≤)',
        '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–Ω—è—Ç–∏—è (18 –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏—Ö —á–∞—Å–æ–≤)',
        '–£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
        '–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —ç–∫–∑–∞–º–µ–Ω',
        '–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ —Å–¥–∞—á–µ —ç–∫–∑–∞–º–µ–Ω–∞ –≤ –ì–ò–ë–î–î'
      ],
      additionalCosts: [
        { service: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞', cost: '–æ—Ç 2500', note: '–æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ' },
        { service: '–ì–æ—Å–ø–æ—à–ª–∏–Ω–∞ –ì–ò–ë–î–î', cost: '2000', note: '–æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ' }
      ]
    },
    {
      id: 3,
      category: 'C',
      name: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤–æ–¥–∏—Ç–µ–ª–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "C"',
      description: '–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –æ–±—É—á–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –≥—Ä—É–∑–æ–≤—ã–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º',
      duration: '3-4 –º–µ—Å—è—Ü–∞',
      cost: 45000,
      includes: [
        '–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–Ω—è—Ç–∏—è (162 –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏—Ö —á–∞—Å–∞)',
        '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–Ω—è—Ç–∏—è (84 –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏—Ö —á–∞—Å–∞)',
        '–£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
        '–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —ç–∫–∑–∞–º–µ–Ω',
        '–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ —Å–¥–∞—á–µ —ç–∫–∑–∞–º–µ–Ω–∞ –≤ –ì–ò–ë–î–î'
      ],
      additionalCosts: [
        { service: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞', cost: '–æ—Ç 3000', note: '–æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ' },
        { service: '–ì–æ—Å–ø–æ—à–ª–∏–Ω–∞ –ì–ò–ë–î–î', cost: '2000', note: '–æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ' }
      ]
    }
  ],
  additionalServices: [
    {
      id: 4,
      name: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–Ω—è—Ç–∏—è',
      description: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è —Å –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º',
      cost: 1500,
      unit: '–∑–∞ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π —á–∞—Å',
      note: '–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–≤—ã–∫–æ–≤'
    },
    {
      id: 5,
      name: '–ü–æ–≤—Ç–æ—Ä–Ω–∞—è —Å–¥–∞—á–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —ç–∫–∑–∞–º–µ–Ω–∞',
      description: '–ü–µ—Ä–µ—Å–¥–∞—á–∞ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–ª–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ —ç–∫–∑–∞–º–µ–Ω–∞',
      cost: 1000,
      unit: '–∑–∞ –ø–æ–ø—ã—Ç–∫—É',
      note: '–í —Å–ª—É—á–∞–µ –Ω–µ—É–¥–∞—á–Ω–æ–π –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏'
    },
    {
      id: 6,
      name: '–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –Ω–∞ —ç–∫–∑–∞–º–µ–Ω –≤ –ì–ò–ë–î–î (–ø–æ–≤—Ç–æ—Ä–Ω–æ–µ)',
      description: '–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –ø–µ—Ä–µ—Å–¥–∞—á–µ –≤ –ì–ò–ë–î–î',
      cost: 2000,
      unit: '–∑–∞ –ø–æ–µ–∑–¥–∫—É',
      note: '–ü—Ä–∏ –Ω–µ—É–¥–∞—á–Ω–æ–π —Å–¥–∞—á–µ —ç–∫–∑–∞–º–µ–Ω–∞ –≤ –ì–ò–ë–î–î'
    },
    {
      id: 7,
      name: '–£—Å–∫–æ—Ä–µ–Ω–Ω—ã–π –∫—É—Ä—Å –æ–±—É—á–µ–Ω–∏—è',
      description: '–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±—É—á–µ–Ω–∏—è',
      cost: 5000,
      unit: '–¥–æ–ø–ª–∞—Ç–∞ –∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏',
      note: '–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ –æ–±—É—á–µ–Ω–∏—è –≤ 1.5 —Ä–∞–∑–∞'
    }
  ],
  paymentTerms: {
    methods: [
      { id: 1, method: '–ù–∞–ª–∏—á–Ω—ã–º–∏ –≤ –∫–∞—Å—Å–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏' },
      { id: 2, method: '–ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π' },
      { id: 3, method: '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–º –ø–µ—Ä–µ–≤–æ–¥–æ–º' },
      { id: 4, method: '–ß–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É "–°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω"' },
      { id: 5, method: '–ß–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª—ã –æ–ø–ª–∞—Ç—ã' }
    ],
    schedule: [
      { id: 1, stage: '–ü—Ä–∏ –∑–∞–∫–ª—é—á–µ–Ω–∏–∏ –¥–æ–≥–æ–≤–æ—Ä–∞', amount: '50%', note: '–æ—Ç –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏' },
      { id: 2, stage: '–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–Ω—è—Ç–∏–π', amount: '30%', note: '–æ—Ç –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏' },
      { id: 3, stage: '–ü–µ—Ä–µ–¥ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º —ç–∫–∑–∞–º–µ–Ω–æ–º', amount: '20%', note: '–æ—Ç –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏' }
    ],
    discounts: [
      { id: 1, category: '–°—Ç—É–¥–µ–Ω—Ç—ã –æ—á–Ω—ã—Ö –æ—Ç–¥–µ–ª–µ–Ω–∏–π', discount: '10%', note: '–ø—Ä–∏ –ø—Ä–µ–¥—ä—è–≤–ª–µ–Ω–∏–∏ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ –±–∏–ª–µ—Ç–∞' },
      { id: 2, category: '–ü–µ–Ω—Å–∏–æ–Ω–µ—Ä—ã', discount: '5%', note: '–ø—Ä–∏ –ø—Ä–µ–¥—ä—è–≤–ª–µ–Ω–∏–∏ –ø–µ–Ω—Å–∏–æ–Ω–Ω–æ–≥–æ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è' },
      { id: 3, category: '–ú–Ω–æ–≥–æ–¥–µ—Ç–Ω—ã–µ —Å–µ–º—å–∏', discount: '15%', note: '–ø—Ä–∏ –ø—Ä–µ–¥—ä—è–≤–ª–µ–Ω–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤' },
      { id: 4, category: '–û–±—É—á–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', discount: '20%', note: '–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è' }
    ]
  },
  contractInfo: {
    templateUrl: '/documents/contract-template.pdf',
    requiredDocuments: [
      '–ü–∞—Å–ø–æ—Ä—Ç –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ –†–§',
      '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –æ–±—Ä–∞–∑—Ü–∞',
      '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ 3x4 —Å–º (2 —à—Ç.)',
      '–í–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ (–ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤—ã—à–µ –∏–º–µ—é—â–µ–π—Å—è)'
    ]
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤
const sanitizeFileName = (filename) => {
  const ext = path.extname(filename);
  const name = path.basename(filename, ext)
    .replace(/[^a-zA-Z0-9–∞-—è–ê-–Ø]/g, '_')
    .replace(/_+/g, '_')
    .replace(/^_|_$/g, '');
  return `${name}${ext}`;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞
const loadExistingFiles = () => {
  try {
    const files = fs.readdirSync(documentsDir);
    console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ ${files.length} —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ documents:`);
    
    files.forEach((filename, index) => {
      const filePath = path.join(documentsDir, filename);
      const stats = fs.statSync(filePath);
      
      // –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
      const safeFileName = sanitizeFileName(filename);
      const safeFilePath = path.join(documentsDir, safeFileName);
      
      // –ï—Å–ª–∏ –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ñ–∞–π–ª
      if (filename !== safeFileName && !fs.existsSync(safeFilePath)) {
        try {
          fs.renameSync(filePath, safeFilePath);
          console.log(`üìù –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω —Ñ–∞–π–ª: ${filename} ‚Üí ${safeFileName}`);
          filename = safeFileName; // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        } catch (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ ${filename}:`, error.message);
        }
      }
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –æ–±—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
      let category = 'charter'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
      if (filename.toLowerCase().includes('license') || filename.toLowerCase().includes('–ª–∏—Ü–µ–Ω–∑–∏')) {
        category = 'license';
      } else if (filename.toLowerCase().includes('report') || filename.toLowerCase().includes('–æ—Ç—á–µ—Ç')) {
        category = 'reports';
      } else if (filename.toLowerCase().includes('regulation') || filename.toLowerCase().includes('–ø—Ä–∞–≤–∏–ª')) {
        category = 'regulations';
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
      const document = {
        id: Date.now() + index, // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
        title: `–î–æ–∫—É–º–µ–Ω—Ç: ${path.basename(filename, path.extname(filename))}`,
        description: `–ó–∞–≥—Ä—É–∂–µ–Ω: ${filename}`,
        category: category,
        fileUrl: `/documents/${filename}`,
        fileName: filename,
        fileSize: `${(stats.size / 1024 / 1024).toFixed(1)} –ú–ë`,
        uploadDate: stats.birthtime.toISOString().split('T')[0],
        lastUpdate: stats.mtime.toISOString().split('T')[0],
        status: 'active'
      };
      
      if (!documentsStore[category]) {
        documentsStore[category] = [];
      }
      documentsStore[category].push(document);
      
      console.log(`üìÑ –ó–∞–≥—Ä—É–∂–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç: ${document.title} (${category}) - ${document.fileSize}`);
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤:', error.message);
  }
};

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞
loadExistingFiles();

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ MIME —Ç–∏–ø–∞–º–∏
app.use('/uploads', express.static('uploads', {
  setHeaders: (res, path) => {
    if (path.endsWith('.pdf')) {
      res.setHeader('Content-Type', 'application/pdf');
    } else if (path.endsWith('.doc')) {
      res.setHeader('Content-Type', 'application/msword');
    } else if (path.endsWith('.docx')) {
      res.setHeader('Content-Type', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document');
    } else if (path.endsWith('.txt')) {
      res.setHeader('Content-Type', 'text/plain; charset=utf-8');
    }
    // –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ –≤ iframe –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    res.setHeader('X-Frame-Options', 'SAMEORIGIN');
  }
}));

app.use('/documents', express.static('uploads/documents', {
  setHeaders: (res, path) => {
    if (path.endsWith('.pdf')) {
      res.setHeader('Content-Type', 'application/pdf');
      res.setHeader('Content-Disposition', 'inline'); // –û—Ç–∫—Ä—ã–≤–∞—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ, –∞ –Ω–µ —Å–∫–∞—á–∏–≤–∞—Ç—å
    } else if (path.endsWith('.doc')) {
      res.setHeader('Content-Type', 'application/msword');
    } else if (path.endsWith('.docx')) {
      res.setHeader('Content-Type', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document');
    } else if (path.endsWith('.txt')) {
      res.setHeader('Content-Type', 'text/plain; charset=utf-8');
    }
    // –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ –≤ iframe –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    res.setHeader('X-Frame-Options', 'SAMEORIGIN');
    // CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Ñ–∞–π–ª–æ–≤
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'GET');
  }
}));

// Health check
app.get('/health', (req, res) => {
  res.status(200).json({
    status: 'ok',
    timestamp: new Date().toISOString(),
    uptime: process.uptime(),
    environment: process.env.NODE_ENV || 'development',
  });
});

// –ë–∞–∑–æ–≤—ã–π API endpoint
app.get('/api', (req, res) => {
  res.status(200).json({
    message: '–†–£–õ–¨+ API - –°–ï–õ - –ü–û–ï–•–ê–õ!',
    version: '1.0.0',
    status: 'running',
    brand: '–†–£–õ–¨+',
    slogan: '–°–ï–õ ‚Äî –ü–û–ï–•–ê–õ',
    endpoints: {
      health: '/health',
      api: '/api',
      basicInfo: '/api/info/basic',
      staff: '/api/info/staff',
      documents: '/api/documents',
    },
  });
});

// API –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–≤–µ–¥–µ–Ω–∏–π
app.get('/api/info/basic', (req, res) => {
  res.status(200).json({
    status: 'success',
    data: {
      fullName: '–û–±—â–µ—Å—Ç–≤–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é "–†–£–õ–¨+"',
      shortName: '–û–û–û "–†–£–õ–¨+"',
      brandName: '–†–£–õ–¨+',
      slogan: '–°–ï–õ ‚Äî –ü–û–ï–•–ê–õ',
      foundedDate: '15 –º–∞—Ä—Ç–∞ 2010 –≥–æ–¥–∞',
      legalAddress: '123456, –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 123, –æ—Ñ. 45',
      actualAddress: '123456, –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 123, –æ—Ñ. 45',
      phone: '+7 (495) 123-45-67',
      email: 'info@rulplus.ru',
      website: 'https://rulplus.ru',
      founder: {
        name: '–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∏ –Ω–∞—É–∫–∏ –≥–æ—Ä–æ–¥–∞ –ú–æ—Å–∫–≤—ã',
        address: '125032, –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, –¥. 13',
        phone: '+7 (495) 777-77-77',
        email: 'info@educom.mos.ru',
        website: 'https://www.mos.ru/donm/'
      },
      management: {
        director: {
          name: '–ú—É—Ç–∞–ª–∏–µ–≤ –ê–º—É—Ä–∫–ª–∞–Ω –ò–±—Ä–∞–≥–∏–º–æ–≤–∏—á',
          position: '–î–∏—Ä–µ–∫—Ç–æ—Ä',
          phone: '+79286970697',
          email: 'amurklan@mail.ru',
          workSchedule: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞: 09:00 - 18:00',
          receptionHours: '–°—Ä–µ–¥–∞: 14:00 - 17:00 (–ø–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∏)'
        }
      },
      workSchedule: {
        weekdays: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞: 09:00 - 18:00',
        saturday: '–°—É–±–±–æ—Ç–∞: 10:00 - 16:00',
        sunday: '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: –≤—ã—Ö–æ–¥–Ω–æ–π',
        holidays: '–í –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –¥–Ω–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ–º—É –≥—Ä–∞—Ñ–∏–∫—É'
      },
      branches: [
        {
          name: '–§–∏–ª–∏–∞–ª "–†–£–õ–¨+ –°–µ–≤–µ—Ä–Ω—ã–π"',
          address: '127015, –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –°–µ–≤–µ—Ä–Ω–∞—è, –¥. 45',
          phone: '+7 (495) 123-45-68',
          slogan: '–°–ï–õ ‚Äî –ü–û–ï–•–ê–õ –ø–æ-—Å–µ–≤–µ—Ä–Ω–æ–º—É!'
        },
        {
          name: '–§–∏–ª–∏–∞–ª "–†–£–õ–¨+ –Æ–∂–Ω—ã–π"',
          address: '115551, –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –Æ–∂–Ω–∞—è, –¥. 78',
          phone: '+7 (495) 123-45-69',
          slogan: '–°–ï–õ ‚Äî –ü–û–ï–•–ê–õ –ø–æ-—é–∂–Ω–æ–º—É!'
        }
      ],
      description: '–†–£–õ–¨+ - –∞–≤—Ç–æ—à–∫–æ–ª–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è! –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥–∏–∫–∏ –æ–±—É—á–µ–Ω–∏—è, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –∏ 95% –Ω–∞—à–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤ —Å–¥–∞—é—Ç —ç–∫–∑–∞–º–µ–Ω —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞.',
      mission: '–ù–∞—É—á–∏—Ç—å –∫–∞–∂–¥–æ–≥–æ —É—á–µ–Ω–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º—É –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ–º—É –≤–æ–∂–¥–µ–Ω–∏—é, –∏—Å–ø–æ–ª—å–∑—É—è –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥.',
      values: [
        '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–µ–≤—ã—à–µ –≤—Å–µ–≥–æ',
        '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É',
        '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –æ–±—É—á–µ–Ω–∏—è',
        '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤',
        '–ß–µ—Å—Ç–Ω–æ—Å—Ç—å –∏ –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å'
      ],
      lastUpdated: new Date().toISOString()
    }
  });
});

// API –¥–ª—è –ø–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞
app.get('/api/info/staff', (req, res) => {
  res.status(200).json({
    status: 'success',
    data: {
      totalCount: 12,
      description: '–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –†–£–õ–¨+ - –æ–ø—ã—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –æ—Å–≤–æ–∏—Ç—å –∏—Å–∫—É—Å—Å—Ç–≤–æ –≤–æ–∂–¥–µ–Ω–∏—è –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É "–°–ï–õ ‚Äî –ü–û–ï–•–ê–õ"!',
      categories: [
        {
          name: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∏—Å—Ü–∏–ø–ª–∏–Ω',
          count: 5,
          staff: [
            {
              id: 1,
              name: '–ò–≤–∞–Ω–æ–≤ –ü–µ—Ç—Ä –°–µ—Ä–≥–µ–µ–≤–∏—á',
              position: '–í–µ–¥—É—â–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Ç–µ–æ—Ä–∏–∏ –†–£–õ–¨+',
              education: '–í—ã—Å—à–µ–µ –ø–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–æ–µ (–ú–ì–ü–£)',
              experience: 15,
              qualificationCategory: '–í—ã—Å—à–∞—è',
              subjects: ['–ü—Ä–∞–≤–∏–ª–∞ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è', '–û—Å–Ω–æ–≤—ã –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞', '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –≤–æ–∂–¥–µ–Ω–∏—è', '–ú–µ—Ç–æ–¥–∏–∫–∞ "–°–ï–õ ‚Äî –ü–û–ï–•–ê–õ"'],
              vehicleTypes: [],
              email: 'ivanov@rulplus.ru',
              phone: '+7 (495) 123-45-70',
              achievements: ['–õ—É—á—à–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –≥–æ–¥–∞ 2023', '–ê–≤—Ç–æ—Ä –º–µ—Ç–æ–¥–∏–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ü–î–î']
            },
            {
              id: 2,
              name: '–ü–µ—Ç—Ä–æ–≤–∞ –ê–Ω–Ω–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞',
              position: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Ç–µ–æ—Ä–∏–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
              education: '–í—ã—Å—à–µ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ (–ú–ê–î–ò)',
              experience: 12,
              qualificationCategory: '–ü–µ—Ä–≤–∞—è',
              subjects: ['–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è', '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'],
              vehicleTypes: [],
              email: 'petrova@rulplus.ru',
              phone: '+7 (495) 123-45-71',
              achievements: ['–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º']
            }
          ]
        },
        {
          name: '–ú–∞—Å—Ç–µ—Ä–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è',
          count: 7,
          staff: [
            {
              id: 3,
              name: '–°–∏–¥–æ—Ä–æ–≤ –ê–ª–µ–∫—Å–µ–π –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á',
              position: '–í–µ–¥—É—â–∏–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ B',
              education: '–°—Ä–µ–¥–Ω–µ–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ (–ê–≤—Ç–æ–º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–π –∫–æ–ª–ª–µ–¥–∂)',
              experience: 20,
              qualificationCategory: '–í—ã—Å—à–∞—è',
              subjects: ['–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ–∂–¥–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ B', '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ–µ –≤–æ–∂–¥–µ–Ω–∏–µ'],
              vehicleTypes: ['–õ–µ–≥–∫–æ–≤—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ —Å –ú–ö–ü–ü', '–õ–µ–≥–∫–æ–≤—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ —Å –ê–ö–ü–ü'],
              email: 'sidorov@rulplus.ru',
              phone: '+7 (495) 123-45-72',
              achievements: ['–ú–∞—Å—Ç–µ—Ä —Å–ø–æ—Ä—Ç–∞ –ø–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–º—É —Å–ø–æ—Ä—Ç—É', '–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≥–æ–¥–∞ 2022-2023']
            },
            {
              id: 4,
              name: '–ö–æ–∑–ª–æ–≤ –î–º–∏—Ç—Ä–∏–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á',
              position: '–ú–∞—Å—Ç–µ—Ä –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ C',
              education: '–°—Ä–µ–¥–Ω–µ–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ (–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–π —Ç–µ—Ö–Ω–∏–∫—É–º)',
              experience: 18,
              qualificationCategory: '–ü–µ—Ä–≤–∞—è',
              subjects: ['–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ–∂–¥–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ C', '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–æ–∫'],
              vehicleTypes: ['–ì—Ä—É–∑–æ–≤—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –¥–æ 7.5—Ç', '–ì—Ä—É–∑–æ–≤—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ —Å–≤—ã—à–µ 7.5—Ç'],
              email: 'kozlov@rulplus.ru',
              phone: '+7 (495) 123-45-73',
              achievements: ['–í–æ–¥–∏—Ç–µ–ª—å-–º–∏–ª–ª–∏–æ–Ω–Ω–∏–∫', '15 –ª–µ—Ç –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏–π –ü–î–î']
            }
          ]
        }
      ],
      qualificationRequirements: [
        '–í—ã—Å—à–µ–µ –∏–ª–∏ —Å—Ä–µ–¥–Ω–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
        '–°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã –≤ —Å—Ñ–µ—Ä–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–µ –º–µ–Ω–µ–µ 3 –ª–µ—Ç',
        '–î–µ–π—Å—Ç–≤—É—é—â–µ–µ –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
        '–ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –ø–æ–≤—ã—à–µ–Ω–∏—è –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–∞–∂–¥—ã–µ 5 –ª–µ—Ç',
        '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ –æ –ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç–∏ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –¢–°',
        '–ó–Ω–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–∏–∫ –æ–±—É—á–µ–Ω–∏—è –≤–æ–∂–¥–µ–Ω–∏—é',
        '–ü—Ä–∏–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç—å —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏ –†–£–õ–¨+: "–°–ï–õ ‚Äî –ü–û–ï–•–ê–õ"'
      ],
      trainingPrograms: [
        '–ï–∂–µ–º–µ—Å—è—á–Ω—ã–µ —Ç—Ä–µ–Ω–∏–Ω–≥–∏ –ø–æ –Ω–æ–≤—ã–º –º–µ—Ç–æ–¥–∏–∫–∞–º –æ–±—É—á–µ–Ω–∏—è',
        '–ö—É—Ä—Å—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º',
        '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–Ω–∏–Ω–≥–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É—á–µ–Ω–∏–∫–∞–º–∏',
        '–°–µ–º–∏–Ω–∞—Ä—ã –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º –≤ –ü–î–î –∏ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ'
      ],
      lastUpdated: new Date().toISOString()
    }
  });
});

// API –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
app.get('/api/documents', (req, res) => {
  res.status(200).json({
    status: 'success',
    data: {
      ...documentsStore,
      lastUpdated: new Date().toISOString()
    }
  });
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
app.post('/api/documents', upload.single('file'), (req, res) => {
  try {
    const { title, description, category, status, expiryDate } = req.body;
    
    if (!title || !description || !category) {
      return res.status(400).json({
        status: 'error',
        message: '–¢—Ä–µ–±—É—é—Ç—Å—è –ø–æ–ª—è: title, description, category'
      });
    }

    const newDocument = {
      id: Date.now(),
      title,
      description,
      category,
      status: status || 'active',
      uploadDate: new Date().toISOString().split('T')[0],
      lastUpdate: new Date().toISOString().split('T')[0],
      ...(expiryDate && { expiryDate })
    };

    // –ï—Å–ª–∏ —Ñ–∞–π–ª –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω
    if (req.file) {
      newDocument.fileUrl = `/documents/${req.file.filename}`;
      newDocument.fileName = req.file.filename;
      newDocument.fileSize = `${(req.file.size / 1024 / 1024).toFixed(1)} –ú–ë`;
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    if (!documentsStore[category]) {
      documentsStore[category] = [];
    }
    documentsStore[category].push(newDocument);

    console.log(`üìÑ –ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω: ${title} (${category})`);

    res.status(201).json({
      status: 'success',
      message: '–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω',
      data: newDocument
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error);
    res.status(500).json({
      status: 'error',
      message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞',
      error: error.message
    });
  }
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
app.put('/api/documents/:id', upload.single('file'), (req, res) => {
  try {
    const documentId = parseInt(req.params.id);
    const { title, description, category, status, expiryDate } = req.body;
    
    // –ò—â–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –≤–æ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
    let foundDocument = null;
    let foundCategory = null;
    
    for (const [catKey, documents] of Object.entries(documentsStore)) {
      const docIndex = documents.findIndex(doc => doc.id === documentId);
      if (docIndex !== -1) {
        foundDocument = documents[docIndex];
        foundCategory = catKey;
        break;
      }
    }

    if (!foundDocument) {
      return res.status(404).json({
        status: 'error',
        message: '–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'
      });
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    if (title) foundDocument.title = title;
    if (description) foundDocument.description = description;
    if (status) foundDocument.status = status;
    if (expiryDate !== undefined) foundDocument.expiryDate = expiryDate;
    foundDocument.lastUpdate = new Date().toISOString().split('T')[0];

    // –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª
    if (req.file) {
      // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
      if (foundDocument.fileName) {
        const oldFilePath = path.join(documentsDir, foundDocument.fileName);
        if (fs.existsSync(oldFilePath)) {
          fs.unlinkSync(oldFilePath);
        }
      }
      
      foundDocument.fileUrl = `/documents/${req.file.filename}`;
      foundDocument.fileName = req.file.filename;
      foundDocument.fileSize = `${(req.file.size / 1024 / 1024).toFixed(1)} –ú–ë`;
    }

    // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –ø–µ—Ä–µ–º–µ—â–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
    if (category && category !== foundCategory) {
      // –£–¥–∞–ª—è–µ–º –∏–∑ —Å—Ç–∞—Ä–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      documentsStore[foundCategory] = documentsStore[foundCategory].filter(doc => doc.id !== documentId);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
      if (!documentsStore[category]) {
        documentsStore[category] = [];
      }
      documentsStore[category].push(foundDocument);
    }

    console.log(`üìù –î–æ–∫—É–º–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω: ${foundDocument.title}`);

    res.json({
      status: 'success',
      message: '–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω',
      data: foundDocument
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error);
    res.status(500).json({
      status: 'error',
      message: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞',
      error: error.message
    });
  }
});

// –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
app.delete('/api/documents/:id', (req, res) => {
  try {
    const documentId = parseInt(req.params.id);
    
    // –ò—â–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –≤–æ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
    let foundDocument = null;
    let foundCategory = null;
    
    for (const [catKey, documents] of Object.entries(documentsStore)) {
      const docIndex = documents.findIndex(doc => doc.id === documentId);
      if (docIndex !== -1) {
        foundDocument = documents[docIndex];
        foundCategory = catKey;
        // –£–¥–∞–ª—è–µ–º –∏–∑ –º–∞—Å—Å–∏–≤–∞
        documentsStore[catKey].splice(docIndex, 1);
        break;
      }
    }

    if (!foundDocument) {
      return res.status(404).json({
        status: 'error',
        message: '–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'
      });
    }

    // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å –¥–∏—Å–∫–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (foundDocument.fileName) {
      const filePath = path.join(documentsDir, foundDocument.fileName);
      if (fs.existsSync(filePath)) {
        fs.unlinkSync(filePath);
        console.log(`üóëÔ∏è –§–∞–π–ª —É–¥–∞–ª–µ–Ω: ${foundDocument.fileName}`);
      }
    }

    console.log(`üóëÔ∏è –î–æ–∫—É–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω: ${foundDocument.title}`);

    res.json({
      status: 'success',
      message: '–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω'
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error);
    res.status(500).json({
      status: 'error',
      message: '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞',
      error: error.message
    });
  }
});

// ===== API –£–°–õ–£–ì =====

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —É—Å–ª—É–≥–∏
app.get('/api/services', (req, res) => {
  try {
    res.json(servicesStore);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É—Å–ª—É–≥:', error);
    res.status(500).json({
      status: 'error',
      message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É—Å–ª—É–≥',
      error: error.message
    });
  }
});

// –°–æ–∑–¥–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é —É—Å–ª—É–≥—É
app.post('/api/services/main', (req, res) => {
  try {
    const { category, name, description, duration, cost, includes, additionalCosts } = req.body;
    
    const newService = {
      id: Date.now(),
      category,
      name,
      description,
      duration,
      cost: parseInt(cost),
      includes: includes.filter(item => item.trim() !== ''),
      additionalCosts: additionalCosts.filter(item => item.service.trim() !== '')
    };

    servicesStore.mainServices.push(newService);
    
    console.log(`‚úÖ –û—Å–Ω–æ–≤–Ω–∞—è —É—Å–ª—É–≥–∞ —Å–æ–∑–¥–∞–Ω–∞: ${newService.name}`);
    
    res.json({
      status: 'success',
      message: '–û—Å–Ω–æ–≤–Ω–∞—è —É—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞',
      data: newService
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π —É—Å–ª—É–≥–∏:', error);
    res.status(500).json({
      status: 'error',
      message: '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π —É—Å–ª—É–≥–∏',
      error: error.message
    });
  }
});

// –û–±–Ω–æ–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é —É—Å–ª—É–≥—É
app.put('/api/services/main/:id', (req, res) => {
  try {
    const serviceId = parseInt(req.params.id);
    const { category, name, description, duration, cost, includes, additionalCosts } = req.body;
    
    const serviceIndex = servicesStore.mainServices.findIndex(service => service.id === serviceId);
    
    if (serviceIndex === -1) {
      return res.status(404).json({
        status: 'error',
        message: '–£—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
      });
    }

    servicesStore.mainServices[serviceIndex] = {
      ...servicesStore.mainServices[serviceIndex],
      category,
      name,
      description,
      duration,
      cost: parseInt(cost),
      includes: includes.filter(item => item.trim() !== ''),
      additionalCosts: additionalCosts.filter(item => item.service.trim() !== '')
    };

    console.log(`üìù –û—Å–Ω–æ–≤–Ω–∞—è —É—Å–ª—É–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${servicesStore.mainServices[serviceIndex].name}`);
    
    res.json({
      status: 'success',
      message: '–û—Å–Ω–æ–≤–Ω–∞—è —É—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
      data: servicesStore.mainServices[serviceIndex]
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π —É—Å–ª—É–≥–∏:', error);
    res.status(500).json({
      status: 'error',
      message: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π —É—Å–ª—É–≥–∏',
      error: error.message
    });
  }
});

// –£–¥–∞–ª–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é —É—Å–ª—É–≥—É
app.delete('/api/services/main/:id', (req, res) => {
  try {
    const serviceId = parseInt(req.params.id);
    
    const serviceIndex = servicesStore.mainServices.findIndex(service => service.id === serviceId);
    
    if (serviceIndex === -1) {
      return res.status(404).json({
        status: 'error',
        message: '–£—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
      });
    }

    const deletedService = servicesStore.mainServices[serviceIndex];
    servicesStore.mainServices.splice(serviceIndex, 1);

    console.log(`üóëÔ∏è –û—Å–Ω–æ–≤–Ω–∞—è —É—Å–ª—É–≥–∞ —É–¥–∞–ª–µ–Ω–∞: ${deletedService.name}`);
    
    res.json({
      status: 'success',
      message: '–û—Å–Ω–æ–≤–Ω–∞—è —É—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞'
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π —É—Å–ª—É–≥–∏:', error);
    res.status(500).json({
      status: 'error',
      message: '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π —É—Å–ª—É–≥–∏',
      error: error.message
    });
  }
});

// –°–æ–∑–¥–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —É—Å–ª—É–≥—É
app.post('/api/services/additional', (req, res) => {
  try {
    const { name, description, cost, unit, note } = req.body;
    
    const newService = {
      id: Date.now(),
      name,
      description,
      cost: parseInt(cost),
      unit,
      note
    };

    servicesStore.additionalServices.push(newService);
    
    console.log(`‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —É—Å–ª—É–≥–∞ —Å–æ–∑–¥–∞–Ω–∞: ${newService.name}`);
    
    res.json({
      status: 'success',
      message: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —É—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞',
      data: newService
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —É—Å–ª—É–≥–∏:', error);
    res.status(500).json({
      status: 'error',
      message: '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —É—Å–ª—É–≥–∏',
      error: error.message
    });
  }
});

// –û–±–Ω–æ–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —É—Å–ª—É–≥—É
app.put('/api/services/additional/:id', (req, res) => {
  try {
    const serviceId = parseInt(req.params.id);
    const { name, description, cost, unit, note } = req.body;
    
    const serviceIndex = servicesStore.additionalServices.findIndex(service => service.id === serviceId);
    
    if (serviceIndex === -1) {
      return res.status(404).json({
        status: 'error',
        message: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —É—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
      });
    }

    servicesStore.additionalServices[serviceIndex] = {
      ...servicesStore.additionalServices[serviceIndex],
      name,
      description,
      cost: parseInt(cost),
      unit,
      note
    };

    console.log(`üìù –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —É—Å–ª—É–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${servicesStore.additionalServices[serviceIndex].name}`);
    
    res.json({
      status: 'success',
      message: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —É—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
      data: servicesStore.additionalServices[serviceIndex]
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —É—Å–ª—É–≥–∏:', error);
    res.status(500).json({
      status: 'error',
      message: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —É—Å–ª—É–≥–∏',
      error: error.message
    });
  }
});

// –£–¥–∞–ª–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —É—Å–ª—É–≥—É
app.delete('/api/services/additional/:id', (req, res) => {
  try {
    const serviceId = parseInt(req.params.id);
    
    const serviceIndex = servicesStore.additionalServices.findIndex(service => service.id === serviceId);
    
    if (serviceIndex === -1) {
      return res.status(404).json({
        status: 'error',
        message: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —É—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
      });
    }

    const deletedService = servicesStore.additionalServices[serviceIndex];
    servicesStore.additionalServices.splice(serviceIndex, 1);

    console.log(`üóëÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —É—Å–ª—É–≥–∞ —É–¥–∞–ª–µ–Ω–∞: ${deletedService.name}`);
    
    res.json({
      status: 'success',
      message: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —É—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞'
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —É—Å–ª—É–≥–∏:', error);
    res.status(500).json({
      status: 'error',
      message: '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —É—Å–ª—É–≥–∏',
      error: error.message
    });
  }
});

// –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã
app.put('/api/services/payment-methods', (req, res) => {
  try {
    const methods = req.body;
    servicesStore.paymentTerms.methods = methods;
    
    console.log(`üìù –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã`);
    
    res.json({
      status: 'success',
      message: '–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã',
      data: methods
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã:', error);
    res.status(500).json({
      status: 'error',
      message: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã',
      error: error.message
    });
  }
});

// –û–±–Ω–æ–≤–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –æ–ø–ª–∞—Ç—ã
app.put('/api/services/payment-schedule', (req, res) => {
  try {
    const schedule = req.body;
    servicesStore.paymentTerms.schedule = schedule;
    
    console.log(`üìù –ì—Ä–∞—Ñ–∏–∫ –æ–ø–ª–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω`);
    
    res.json({
      status: 'success',
      message: '–ì—Ä–∞—Ñ–∏–∫ –æ–ø–ª–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω',
      data: schedule
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –æ–ø–ª–∞—Ç—ã:', error);
    res.status(500).json({
      status: 'error',
      message: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –æ–ø–ª–∞—Ç—ã',
      error: error.message
    });
  }
});

// –û–±–Ω–æ–≤–∏—Ç—å —Å–∫–∏–¥–∫–∏
app.put('/api/services/discounts', (req, res) => {
  try {
    const discounts = req.body;
    servicesStore.paymentTerms.discounts = discounts;
    
    console.log(`üìù –°–∫–∏–¥–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã`);
    
    res.json({
      status: 'success',
      message: '–°–∫–∏–¥–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã',
      data: discounts
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∫–∏–¥–æ–∫:', error);
    res.status(500).json({
      status: 'error',
      message: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∫–∏–¥–æ–∫',
      error: error.message
    });
  }
});

// –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–≥–æ–≤–æ—Ä–µ
app.put('/api/services/contract-info', (req, res) => {
  try {
    const contractInfo = req.body;
    servicesStore.contractInfo = contractInfo;
    
    console.log(`üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–≥–æ–≤–æ—Ä–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞`);
    
    res.json({
      status: 'success',
      message: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–≥–æ–≤–æ—Ä–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
      data: contractInfo
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ–≥–æ–≤–æ—Ä–µ:', error);
    res.status(500).json({
      status: 'error',
      message: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ–≥–æ–≤–æ—Ä–µ',
      error: error.message
    });
  }
});

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
app.use('/admin/stats', adminStatsRoutes);

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ
app.use('/api/applications', applicationRoutes);

// 404 handler
app.use((req, res) => {
  res.status(404).json({
    status: 'error',
    message: `–ú–∞—Ä—à—Ä—É—Ç ${req.originalUrl} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –†–£–õ–¨+`,
    code: 'ROUTE_NOT_FOUND',
    hint: '–°–ï–õ –Ω–µ —Ç—É–¥–∞ ‚Äî –ü–û–ï–•–ê–õ –≤ –¥—Ä—É–≥–æ–µ –º–µ—Å—Ç–æ! üöó',
  });
});

// Error handler
app.use((error, req, res, next) => {
  console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –†–£–õ–¨+:', error);
  
  res.status(error.statusCode || 500).json({
    status: 'error',
    message: process.env.NODE_ENV === 'production' 
      ? '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –†–£–õ–¨+' 
      : error.message,
    ...(process.env.NODE_ENV !== 'production' && { stack: error.stack })
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 5000;

const server = app.listen(PORT, () => {
  console.log(`üöó –†–£–õ–¨+ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üåç –†–µ–∂–∏–º: ${process.env.NODE_ENV || 'development'}`);
  console.log(`üéØ –°–ª–æ–≥–∞–Ω: –°–ï–õ ‚Äî –ü–û–ï–•–ê–õ!`);
  console.log(`üîó API endpoints:`);
  console.log(`   - Health check: http://localhost:${PORT}/health`);
  console.log(`   - Basic info: http://localhost:${PORT}/api/info/basic`);
  console.log(`   - Staff info: http://localhost:${PORT}/api/info/staff`);
  console.log(`   - Documents: http://localhost:${PORT}/api/documents`);
  console.log(`   - Upload document: POST http://localhost:${PORT}/api/documents`);
  console.log(`   - Update document: PUT http://localhost:${PORT}/api/documents/:id`);
  console.log(`   - Delete document: DELETE http://localhost:${PORT}/api/documents/:id`);
  console.log(`   - Services: http://localhost:${PORT}/api/services`);
  console.log(`   - Create main service: POST http://localhost:${PORT}/api/services/main`);
  console.log(`   - Update main service: PUT http://localhost:${PORT}/api/services/main/:id`);
  console.log(`   - Delete main service: DELETE http://localhost:${PORT}/api/services/main/:id`);
  console.log(`   - Create additional service: POST http://localhost:${PORT}/api/services/additional`);
  console.log(`   - Update additional service: PUT http://localhost:${PORT}/api/services/additional/:id`);
  console.log(`   - Delete additional service: DELETE http://localhost:${PORT}/api/services/additional/:id`);
  console.log(`   - Update payment methods: PUT http://localhost:${PORT}/api/services/payment-methods`);
  console.log(`   - Update payment schedule: PUT http://localhost:${PORT}/api/services/payment-schedule`);
  console.log(`   - Update discounts: PUT http://localhost:${PORT}/api/services/discounts`);
  console.log(`   - Update contract info: PUT http://localhost:${PORT}/api/services/contract-info`);
  console.log(`   - Admin stats quick: http://localhost:${PORT}/admin/stats/quick`);
  console.log(`   - Admin stats detailed: http://localhost:${PORT}/admin/stats/detailed`);
  console.log(`   - Admin stats monthly: http://localhost:${PORT}/admin/stats/monthly`);
  console.log(`   - Submit application: POST http://localhost:${PORT}/api/applications/submit`);
  console.log(`   - Main API: http://localhost:${PORT}/api`);
  console.log(`üöÄ –†–£–õ–¨+ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!`);
});

// Graceful shutdown
process.on('SIGTERM', () => {
  console.log('SIGTERM —Å–∏–≥–Ω–∞–ª –ø–æ–ª—É—á–µ–Ω - –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É –†–£–õ–¨+');
  server.close(() => {
    console.log('–†–£–õ–¨+ —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    process.exit(0);
  });
});

process.on('SIGINT', () => {
  console.log('SIGINT —Å–∏–≥–Ω–∞–ª –ø–æ–ª—É—á–µ–Ω - –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É –†–£–õ–¨+');
  server.close(() => {
    console.log('–†–£–õ–¨+ —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    process.exit(0);
  });
});

export default app; 