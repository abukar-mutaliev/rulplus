import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function testConnection() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL...');

    // –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    await prisma.$queryRaw`SELECT 1 as test`;

    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å–ø–µ—à–Ω–æ!');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö rulplus_db
    const databases = await prisma.$queryRaw`SELECT datname FROM pg_database WHERE datname = 'rulplus_db'`;

    if (databases.length > 0) {
      console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö rulplus_db —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      console.log('‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö rulplus_db –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      console.log('–°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ pgAdmin –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
      console.log('CREATE DATABASE rulplus_db;');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);

    if (error.message.includes('Authentication failed')) {
      console.log('\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
      console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è postgres –≤ pgAdmin');
      console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å postgres –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ');
      console.log('3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/–ø–∞—Ä–æ–ª—å');
    }
  } finally {
    await prisma.$disconnect();
  }
}

testConnection();
